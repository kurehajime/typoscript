(()=>{"use strict";var __webpack_modules__={533:(u,e,n)=>{const t=n(176),r={findRule(u,e){for(let n=0;n<u.rules.length;n++)if(u.rules[n].name===e)return u.rules[n]},indexOfRule(u,e){for(let n=0;n<u.rules.length;n++)if(u.rules[n].name===e)return n;return-1},alwaysConsumesOnSuccess(u,e){function n(){return!0}function a(){return!1}const i=t.build({choice:u=>u.alternatives.every(i),sequence:u=>u.elements.some(i),simple_and:a,simple_not:a,optional:a,zero_or_more:a,semantic_and:a,semantic_not:a,rule_ref:e=>i(r.findRule(u,e.name)),literal:u=>""!==u.value,class:n,any:n});return i(e)}};u.exports=r},378:(module,__unused_webpack_exports,__webpack_require__)=>{const generateBytecode=__webpack_require__(375),generateJS=__webpack_require__(767),inferenceMatchResult=__webpack_require__(951),removeProxyRules=__webpack_require__(350),reportDuplicateLabels=__webpack_require__(547),reportDuplicateRules=__webpack_require__(842),reportInfiniteRecursion=__webpack_require__(383),reportInfiniteRepetition=__webpack_require__(574),reportUndefinedRules=__webpack_require__(298),reportIncorrectPlucking=__webpack_require__(97),visitor=__webpack_require__(176);function processOptions(u,e){const n={};return Object.keys(u).forEach((e=>{n[e]=u[e]})),Object.keys(e).forEach((u=>{Object.prototype.hasOwnProperty.call(n,u)||(n[u]=e[u])})),n}const compiler={visitor,passes:{check:[reportUndefinedRules,reportDuplicateRules,reportDuplicateLabels,reportInfiniteRecursion,reportInfiniteRepetition,reportIncorrectPlucking],transform:[removeProxyRules,inferenceMatchResult],generate:[generateBytecode,generateJS]},compile(ast,passes,options){switch(options=void 0!==options?options:{},options=processOptions(options,{allowedStartRules:[ast.rules[0].name],cache:!1,dependencies:{},exportVar:null,format:"bare",output:"parser",trace:!1}),Object.keys(passes).forEach((u=>{passes[u].forEach((u=>{u(ast,options)}))})),options.output){case"parser":return eval(ast.code);case"source":return ast.code;default:throw new Error("Invalid output format: "+options.output+".")}}};module.exports=compiler},642:u=>{u.exports={PUSH:0,PUSH_EMPTY_STRING:35,PUSH_UNDEFINED:1,PUSH_NULL:2,PUSH_FAILED:3,PUSH_EMPTY_ARRAY:4,PUSH_CURR_POS:5,POP:6,POP_CURR_POS:7,POP_N:8,NIP:9,APPEND:10,WRAP:11,TEXT:12,PLUCK:36,IF:13,IF_ERROR:14,IF_NOT_ERROR:15,WHILE_NOT_ERROR:16,MATCH_ANY:17,MATCH_STRING:18,MATCH_STRING_IC:19,MATCH_CHAR_CLASS:20,MATCH_REGEXP:20,ACCEPT_N:21,ACCEPT_STRING:22,FAIL:23,LOAD_SAVED_POS:24,UPDATE_SAVED_POS:25,CALL:26,RULE:27,SILENT_FAILS_ON:28,SILENT_FAILS_OFF:29}},375:(u,e,n)=>{const t=n(533),r=n(642),a=n(176),{ALWAYS_MATCH:i,SOMETIMES_MATCH:o,NEVER_MATCH:s}=n(951);u.exports=function(u){const e=[],n=[],A=[],l=[];function c(u){const e=JSON.stringify(u),n=A.findIndex((u=>JSON.stringify(u)===e));return-1===n?A.push(u)-1:n}function E(u,e,n){const t={predicate:u,params:e,body:n},r=JSON.stringify(t),a=l.findIndex((u=>JSON.stringify(u)===r));return-1===a?l.push(t)-1:a}function p(u){const e={};return Object.keys(u).forEach((n=>{e[n]=u[n]})),e}function C(u,...e){return u.concat(...e)}function F(u,e,n,t){return u===i?n:u===s?t:e.concat([n.length,t.length],n,t)}function B(u,e,n,t){const a=Object.keys(n).map((u=>t-n[u]));return[r.CALL,u,e,a.length].concat(a)}function D(u,e,n){const t=0|u.match;return C([r.PUSH_CURR_POS],[r.SILENT_FAILS_ON],f(u,{sp:n.sp+1,env:p(n.env),action:null}),[r.SILENT_FAILS_OFF],F(e?-t:t,[e?r.IF_ERROR:r.IF_NOT_ERROR],C([r.POP],[e?r.POP:r.POP_CURR_POS],[r.PUSH_UNDEFINED]),C([r.POP],[e?r.POP_CURR_POS:r.POP],[r.PUSH_FAILED])))}function d(u,e,n){const t=E(!0,Object.keys(n.env),u.code);return C([r.UPDATE_SAVED_POS],B(t,0,n.env,n.sp),F(0|u.match,[r.IF],C([r.POP],e?[r.PUSH_FAILED]:[r.PUSH_UNDEFINED]),C([r.POP],e?[r.PUSH_UNDEFINED]:[r.PUSH_FAILED])))}function h(u){return e=[r.WHILE_NOT_ERROR],n=C([r.APPEND],u),e.concat([n.length],n);var e,n}const f=a.build({grammar(u){u.rules.forEach(f),u.literals=e,u.classes=n,u.expectations=A,u.functions=l},rule(u){u.bytecode=f(u.expression,{sp:-1,env:{},pluck:[],action:null})},named(u,e){const n=0|u.match,t=n===s?null:c({type:"rule",value:u.name});return C([r.SILENT_FAILS_ON],f(u.expression,e),[r.SILENT_FAILS_OFF],F(n,[r.IF_ERROR],[r.FAIL,t],[]))},choice:(u,e)=>function u(e,n){const t=0|e[0].match,a=f(e[0],{sp:n.sp,env:p(n.env),action:null});return t===i?a:C(a,e.length>1?F(o,[r.IF_ERROR],C([r.POP],u(e.slice(1),n)),[]):[])}(u.alternatives,e),action(u,e){const n=p(e.env),t="sequence"!==u.expression.type||0===u.expression.elements.length,a=f(u.expression,{sp:e.sp+(t?1:0),env:n,action:u}),i=0|u.expression.match,o=t&&i!==s?E(!1,Object.keys(n),u.code):null;return t?C([r.PUSH_CURR_POS],a,F(i,[r.IF_NOT_ERROR],C([r.LOAD_SAVED_POS,1],B(o,1,n,e.sp+2)),[]),[r.NIP]):a},sequence:(u,e)=>C([r.PUSH_CURR_POS],function e(n,t){if(n.length>0){const a=u.elements.length-n.length+1;return C(f(n[0],{sp:t.sp,env:t.env,pluck:t.pluck,action:null}),F(0|n[0].match,[r.IF_NOT_ERROR],e(n.slice(1),{sp:t.sp+1,env:t.env,pluck:t.pluck,action:t.action}),C(a>1?[r.POP_N,a]:[r.POP],[r.POP_CURR_POS],[r.PUSH_FAILED])))}if(t.pluck.length>0)return C([r.PLUCK,u.elements.length+1,t.pluck.length],t.pluck.map((u=>t.sp-u)));if(t.action){const e=E(!1,Object.keys(t.env),t.action.code);return C([r.LOAD_SAVED_POS,u.elements.length],B(e,u.elements.length+1,t.env,t.sp))}return C([r.WRAP,u.elements.length],[r.NIP])}(u.elements,{sp:e.sp+1,env:e.env,pluck:[],action:e.action})),labeled(u,e){let n=e.env;const t=u.label,r=e.sp+1;return t&&(n=p(e.env),e.env[u.label]=r),u.pick&&e.pluck.push(r),f(u.expression,{sp:e.sp,env:n,action:null})},text:(u,e)=>C([r.PUSH_CURR_POS],f(u.expression,{sp:e.sp+1,env:p(e.env),action:null}),F(0|u.match,[r.IF_NOT_ERROR],C([r.POP],[r.TEXT]),[r.NIP])),simple_and:(u,e)=>D(u.expression,!1,e),simple_not:(u,e)=>D(u.expression,!0,e),optional:(u,e)=>C(f(u.expression,{sp:e.sp,env:p(e.env),action:null}),F(-(0|u.expression.match),[r.IF_ERROR],C([r.POP],[r.PUSH_NULL]),[])),zero_or_more(u,e){const n=f(u.expression,{sp:e.sp+1,env:p(e.env),action:null});return C([r.PUSH_EMPTY_ARRAY],n,h(n),[r.POP])},one_or_more(u,e){const n=f(u.expression,{sp:e.sp+1,env:p(e.env),action:null});return C([r.PUSH_EMPTY_ARRAY],n,F(0|u.expression.match,[r.IF_NOT_ERROR],C(h(n),[r.POP]),C([r.POP],[r.POP],[r.PUSH_FAILED])))},group:(u,e)=>f(u.expression,{sp:e.sp,env:p(e.env),action:null}),semantic_and:(u,e)=>d(u,!1,e),semantic_not:(u,e)=>d(u,!0,e),rule_ref:e=>[r.RULE,t.indexOfRule(u,e.name)],literal(u){if(u.value.length>0){const n=0|u.match,t=n===o||n===i&&!u.ignoreCase?function(u){const n=e.indexOf(u);return-1===n?e.push(u)-1:n}(u.ignoreCase?u.value.toLowerCase():u.value):null,a=n!==i?c({type:"literal",value:u.value,ignoreCase:u.ignoreCase}):null;return F(n,u.ignoreCase?[r.MATCH_STRING_IC,t]:[r.MATCH_STRING,t],u.ignoreCase?[r.ACCEPT_N,u.value.length]:[r.ACCEPT_STRING,t],[r.FAIL,a])}return[r.PUSH_EMPTY_STRING]},class(u){const e=0|u.match,t=e===o?function(u){const e={value:u.parts,inverted:u.inverted,ignoreCase:u.ignoreCase},t=JSON.stringify(e),r=n.findIndex((u=>JSON.stringify(u)===t));return-1===r?n.push(e)-1:r}(u):null,a=e!==i?c({type:"class",value:u.parts,inverted:u.inverted,ignoreCase:u.ignoreCase}):null;return F(e,[r.MATCH_CHAR_CLASS,t],[r.ACCEPT_N,1],[r.FAIL,a])},any(u){const e=0|u.match,n=e!==i?c({type:"any"}):null;return F(e,[r.MATCH_ANY],[r.ACCEPT_N,1],[r.FAIL,n])}});f(u)}},767:(u,e,n)=>{const t=n(533),r=n(642),a=n(18),i=n(889);function o(u){return u.charCodeAt(0).toString(16).toUpperCase()}function s(u){return u.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\x08/g,"\\b").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\v/g,"\\v").replace(/\f/g,"\\f").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(u=>"\\x0"+o(u))).replace(/[\x10-\x1F\x7F-\xFF]/g,(u=>"\\x"+o(u))).replace(/[\u0100-\u0FFF]/g,(u=>"\\u0"+o(u))).replace(/[\u1000-\uFFFF]/g,(u=>"\\u"+o(u)))}function A(u){return u.replace(/\\/g,"\\\\").replace(/\//g,"\\/").replace(/]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\x08/g,"\\b").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\v/g,"\\v").replace(/\f/g,"\\f").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(u=>"\\x0"+o(u))).replace(/[\x10-\x1F\x7F-\xFF]/g,(u=>"\\x"+o(u))).replace(/[\u0100-\u0FFF]/g,(u=>"\\u0"+o(u))).replace(/[\u1000-\uFFFF]/g,(u=>"\\u"+o(u)))}u.exports=function(u,e){function n(u){return u.replace(/^(.+)$/gm,"  $1")}function o(u){return"peg$c"+u}function l(u){return"peg$r"+u}function c(u){return"peg$e"+u}function E(u){return"peg$f"+u}u.code=function(u){function t(){return[`// Generated by Peggy ${i}.`,"//","// https://peggyjs.org/"].join("\n")}function r(){return e.trace?["{","  SyntaxError: peg$SyntaxError,","  DefaultTracer: peg$DefaultTracer,","  parse: peg$parse","}"].join("\n"):["{","  SyntaxError: peg$SyntaxError,","  parse: peg$parse","}"].join("\n")}return{bare:()=>[t(),"(function() {",'  "use strict";',"",n(u),"",n("return "+r()+";"),"})()"].join("\n"),commonjs(){const n=[],a=Object.keys(e.dependencies);return n.push([t(),"",'"use strict";',""].join("\n")),a.length>0&&(a.forEach((u=>{n.push("var "+u+' = require("'+s(e.dependencies[u])+'");')})),n.push("")),n.push([u,"","module.exports = "+r()+";",""].join("\n")),n.join("\n")},es(){const n=[],r=Object.keys(e.dependencies);return n.push(t(),""),r.length>0&&(r.forEach((u=>{n.push("import "+u+' from "'+s(e.dependencies[u])+'";')})),n.push("")),n.push(u,"","export "+(e.trace?["{","  peg$SyntaxError as SyntaxError,","  peg$DefaultTracer as DefaultTracer,","  peg$parse as parse","}"].join("\n"):["{","  peg$SyntaxError as SyntaxError,","  peg$parse as parse","}"].join("\n"))+";",""),n.join("\n")},amd(){const a=Object.keys(e.dependencies),i="["+a.map((u=>e.dependencies[u])).map((u=>'"'+s(u)+'"')).join(", ")+"]",o=a.join(", ");return[t(),"define("+i+", function("+o+") {",'  "use strict";',"",n(u),"",n("return "+r()+";"),"});",""].join("\n")},globals:()=>[t(),"(function(root) {",'  "use strict";',"",n(u),"",n("root."+e.exportVar+" = "+r()+";"),"})(this);",""].join("\n"),umd(){const a=[],i=Object.keys(e.dependencies),o=i.map((u=>e.dependencies[u])),A="["+o.map((u=>'"'+s(u)+'"')).join(", ")+"]",l=o.map((u=>'require("'+s(u)+'")')).join(", "),c=i.join(", ");return a.push([t(),"(function(root, factory) {",'  if (typeof define === "function" && define.amd) {',"    define("+A+", factory);",'  } else if (typeof module === "object" && module.exports) {',"    module.exports = factory("+l+");"].join("\n")),null!==e.exportVar&&a.push(["  } else {","    root."+e.exportVar+" = factory();"].join("\n")),a.push(["  }","})(this, function("+c+") {",'  "use strict";',"",n(u),"",n("return "+r()+";"),"});",""].join("\n")),a.join("\n")}}[e.format]()}(function(){const i=[];u.topLevelInitializer&&(i.push(u.topLevelInitializer.code),i.push("")),i.push(["function peg$subclass(child, parent) {","  function C() { this.constructor = child; }","  C.prototype = parent.prototype;","  child.prototype = new C();","}","","function peg$SyntaxError(message, expected, found, location) {","  var self = Error.call(this, message);","  if (Object.setPrototypeOf) {","    Object.setPrototypeOf(self, peg$SyntaxError.prototype);","  }","  self.expected = expected;","  self.found = found;","  self.location = location;",'  self.name = "SyntaxError";',"  return self;","}","","peg$subclass(peg$SyntaxError, Error);","","function peg$padEnd(str, targetLength, padString) {",'  padString = padString || " ";',"  if (str.length > targetLength) { return str; }","  targetLength -= str.length;","  padString += padString.repeat(targetLength);","  return str + padString.slice(0, targetLength);","}","","peg$SyntaxError.prototype.format = function(sources) {",'  var str = "Error: " + this.message;',"  if (this.location) {","    var src = null;","    var k;","    for (k = 0; k < sources.length; k++) {","      if (sources[k].source === this.location.source) {","        src = sources[k].text.split(/\\r\\n|\\n|\\r/g);","        break;","      }","    }","    var s = this.location.start;",'    var loc = this.location.source + ":" + s.line + ":" + s.column;',"    if (src) {","      var e = this.location.end;",'      var filler = peg$padEnd("", s.line.toString().length);',"      var line = src[s.line - 1];","      var last = s.line === e.line ? e.column : line.length + 1;",'      str += "\\n --\x3e " + loc + "\\n"','          + filler + " |\\n"','          + s.line + " | " + line + "\\n"','          + filler + " | " + peg$padEnd("", s.column - 1)','          + peg$padEnd("", last - s.column, "^");',"    } else {",'      str += "\\n at " + loc;',"    }","  }","  return str;","};","","peg$SyntaxError.buildMessage = function(expected, found) {","  var DESCRIBE_EXPECTATION_FNS = {","    literal: function(expectation) {",'      return "\\"" + literalEscape(expectation.text) + "\\"";',"    },","","    class: function(expectation) {","      var escapedParts = expectation.parts.map(function(part) {","        return Array.isArray(part)",'          ? classEscape(part[0]) + "-" + classEscape(part[1])',"          : classEscape(part);","      });","",'      return "[" + (expectation.inverted ? "^" : "") + escapedParts + "]";',"    },","","    any: function() {",'      return "any character";',"    },","","    end: function() {",'      return "end of input";',"    },","","    other: function(expectation) {","      return expectation.description;","    }","  };","","  function hex(ch) {","    return ch.charCodeAt(0).toString(16).toUpperCase();","  }","","  function literalEscape(s) {","    return s",'      .replace(/\\\\/g, "\\\\\\\\")','      .replace(/"/g,  "\\\\\\"")','      .replace(/\\0/g, "\\\\0")','      .replace(/\\t/g, "\\\\t")','      .replace(/\\n/g, "\\\\n")','      .replace(/\\r/g, "\\\\r")','      .replace(/[\\x00-\\x0F]/g,          function(ch) { return "\\\\x0" + hex(ch); })','      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return "\\\\x"  + hex(ch); });',"  }","","  function classEscape(s) {","    return s",'      .replace(/\\\\/g, "\\\\\\\\")','      .replace(/\\]/g, "\\\\]")','      .replace(/\\^/g, "\\\\^")','      .replace(/-/g,  "\\\\-")','      .replace(/\\0/g, "\\\\0")','      .replace(/\\t/g, "\\\\t")','      .replace(/\\n/g, "\\\\n")','      .replace(/\\r/g, "\\\\r")','      .replace(/[\\x00-\\x0F]/g,          function(ch) { return "\\\\x0" + hex(ch); })','      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return "\\\\x"  + hex(ch); });',"  }","","  function describeExpectation(expectation) {","    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);","  }","","  function describeExpected(expected) {","    var descriptions = expected.map(describeExpectation);","    var i, j;","","    descriptions.sort();","","    if (descriptions.length > 0) {","      for (i = 1, j = 1; i < descriptions.length; i++) {","        if (descriptions[i - 1] !== descriptions[i]) {","          descriptions[j] = descriptions[i];","          j++;","        }","      }","      descriptions.length = j;","    }","","    switch (descriptions.length) {","      case 1:","        return descriptions[0];","","      case 2:",'        return descriptions[0] + " or " + descriptions[1];',"","      default:",'        return descriptions.slice(0, -1).join(", ")','          + ", or "',"          + descriptions[descriptions.length - 1];","    }","  }","","  function describeFound(found) {",'    return found ? "\\"" + literalEscape(found) + "\\"" : "end of input";',"  }","",'  return "Expected " + describeExpected(expected) + " but " + describeFound(found) + " found.";',"};",""].join("\n")),e.trace&&i.push(["function peg$DefaultTracer() {","  this.indentLevel = 0;","}","","peg$DefaultTracer.prototype.trace = function(event) {","  var that = this;","","  function log(event) {","    function repeat(string, n) {",'       var result = "", i;',"","       for (i = 0; i < n; i++) {","         result += string;","       }","","       return result;","    }","","    function pad(string, length) {",'      return string + repeat(" ", length - string.length);',"    }","",'    if (typeof console === "object") {',"      console.log(",'        event.location.start.line + ":" + event.location.start.column + "-"','          + event.location.end.line + ":" + event.location.end.column + " "','          + pad(event.type, 10) + " "','          + repeat("  ", that.indentLevel) + event.rule',"      );","    }","  }","","  switch (event.type) {",'    case "rule.enter":',"      log(event);","      this.indentLevel++;","      break;","",'    case "rule.match":',"      this.indentLevel--;","      log(event);","      break;","",'    case "rule.fail":',"      this.indentLevel--;","      log(event);","      break;","","    default:",'      throw new Error("Invalid event type: " + event.type + ".");',"  }","};",""].join("\n"));const p="{ "+e.allowedStartRules.map((u=>u+": peg$parse"+u)).join(", ")+" }",C="peg$parse"+e.allowedStartRules[0];return i.push(["function peg$parse(input, options) {","  options = options !== undefined ? options : {};","","  var peg$FAILED = {};","  var peg$source = options.grammarSource;","","  var peg$startRuleFunctions = "+p+";","  var peg$startRuleFunction = "+C+";","",n(u.literals.map(((u,e)=>"var "+o(e)+' = "'+s(u)+'";')).concat("",u.classes.map(((u,e)=>{return"var "+l(e)+" = /^["+((n=u).inverted?"^":"")+n.value.map((u=>Array.isArray(u)?A(u[0])+"-"+A(u[1]):A(u))).join("")+"]/"+(n.ignoreCase?"i":"")+";";var n}))).concat("",u.expectations.map(((u,e)=>"var "+c(e)+" = "+function(u){switch(u.type){case"rule":return'peg$otherExpectation("'+s(u.value)+'")';case"literal":return'peg$literalExpectation("'+s(u.value)+'", '+u.ignoreCase+")";case"class":return"peg$classExpectation(["+u.value.map((u=>Array.isArray(u)?'["'+s(u[0])+'", "'+s(u[1])+'"]':'"'+s(u)+'"')).join(", ")+"], "+u.inverted+", "+u.ignoreCase+")";case"any":return"peg$anyExpectation()";default:throw new Error("Unknown expectation type ("+JSON.stringify(u)+")")}}(u)+";"))).concat("",u.functions.map(((u,e)=>{return"var "+E(e)+" = function("+(n=u).params.join(", ")+") {"+n.body+"};";var n}))).join("\n")),"","  var peg$currPos = 0;","  var peg$savedPos = 0;","  var peg$posDetailsCache = [{ line: 1, column: 1 }];","  var peg$maxFailPos = 0;","  var peg$maxFailExpected = [];","  var peg$silentFails = 0;",""].join("\n")),e.cache&&i.push(["  var peg$resultsCache = {};",""].join("\n")),e.trace&&i.push(['  var peg$tracer = "tracer" in options ? options.tracer : new peg$DefaultTracer();',""].join("\n")),i.push(["  var peg$result;","",'  if ("startRule" in options) {',"    if (!(options.startRule in peg$startRuleFunctions)) {",'      throw new Error("Can\'t start parsing from rule \\"" + options.startRule + "\\".");',"    }","","    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];","  }","","  function text() {","    return input.substring(peg$savedPos, peg$currPos);","  }","","  function offset() {","    return peg$savedPos;","  }","","  function range() {","    return {","      source: peg$source,","      start: peg$savedPos,","      end: peg$currPos","    };","  }","","  function location() {","    return peg$computeLocation(peg$savedPos, peg$currPos);","  }","","  function expected(description, location) {","    location = location !== undefined","      ? location","      : peg$computeLocation(peg$savedPos, peg$currPos);","","    throw peg$buildStructuredError(","      [peg$otherExpectation(description)],","      input.substring(peg$savedPos, peg$currPos),","      location","    );","  }","","  function error(message, location) {","    location = location !== undefined","      ? location","      : peg$computeLocation(peg$savedPos, peg$currPos);","","    throw peg$buildSimpleError(message, location);","  }","","  function peg$literalExpectation(text, ignoreCase) {",'    return { type: "literal", text: text, ignoreCase: ignoreCase };',"  }","","  function peg$classExpectation(parts, inverted, ignoreCase) {",'    return { type: "class", parts: parts, inverted: inverted, ignoreCase: ignoreCase };',"  }","","  function peg$anyExpectation() {",'    return { type: "any" };',"  }","","  function peg$endExpectation() {",'    return { type: "end" };',"  }","","  function peg$otherExpectation(description) {",'    return { type: "other", description: description };',"  }","","  function peg$computePosDetails(pos) {","    var details = peg$posDetailsCache[pos];","    var p;","","    if (details) {","      return details;","    } else {","      p = pos - 1;","      while (!peg$posDetailsCache[p]) {","        p--;","      }","","      details = peg$posDetailsCache[p];","      details = {","        line: details.line,","        column: details.column","      };","","      while (p < pos) {","        if (input.charCodeAt(p) === 10) {","          details.line++;","          details.column = 1;","        } else {","          details.column++;","        }","","        p++;","      }","","      peg$posDetailsCache[pos] = details;","","      return details;","    }","  }","","  function peg$computeLocation(startPos, endPos) {","    var startPosDetails = peg$computePosDetails(startPos);","    var endPosDetails = peg$computePosDetails(endPos);","","    return {","      source: peg$source,","      start: {","        offset: startPos,","        line: startPosDetails.line,","        column: startPosDetails.column","      },","      end: {","        offset: endPos,","        line: endPosDetails.line,","        column: endPosDetails.column","      }","    };","  }","","  function peg$fail(expected) {","    if (peg$currPos < peg$maxFailPos) { return; }","","    if (peg$currPos > peg$maxFailPos) {","      peg$maxFailPos = peg$currPos;","      peg$maxFailExpected = [];","    }","","    peg$maxFailExpected.push(expected);","  }","","  function peg$buildSimpleError(message, location) {","    return new peg$SyntaxError(message, null, null, location);","  }","","  function peg$buildStructuredError(expected, found, location) {","    return new peg$SyntaxError(","      peg$SyntaxError.buildMessage(expected, found),","      expected,","      found,","      location","    );","  }",""].join("\n")),u.rules.forEach((A=>{i.push(n(function(i){const A=[],p=new a(i.name,"s","var"),C=function e(t){let a=0;const i=t.length,s=[];let A;function C(u,r){const i=r+3,o=t[a+i-2],A=t[a+i-1];let l,c;p.checkedIf(a,(()=>{a+=i,l=e(t.slice(a,a+o)),a+=o}),A>0?()=>{c=e(t.slice(a,a+A)),a+=A}:null),s.push("if ("+u+") {"),s.push(n(l)),A>0&&(s.push("} else {"),s.push(n(c))),s.push("}")}function F(u){const r=t[a+2-1];let i;p.checkedLoop(a,(()=>{a+=2,i=e(t.slice(a,a+r)),a+=r})),s.push("while ("+u+") {"),s.push(n(i)),s.push("}")}function B(){const u=t[a+4-1],e=E(t[a+1])+"("+t.slice(a+4,a+4+u).map((u=>p.index(u))).join(", ")+")";p.pop(t[a+2]),s.push(p.push(e)),a+=4+u}for(;a<i;)switch(t[a]){case r.PUSH_EMPTY_STRING:s.push(p.push("''")),a++;break;case r.PUSH_CURR_POS:s.push(p.push("peg$currPos")),a++;break;case r.PUSH_UNDEFINED:s.push(p.push("undefined")),a++;break;case r.PUSH_NULL:s.push(p.push("null")),a++;break;case r.PUSH_FAILED:s.push(p.push("peg$FAILED")),a++;break;case r.PUSH_EMPTY_ARRAY:s.push(p.push("[]")),a++;break;case r.POP:p.pop(),a++;break;case r.POP_CURR_POS:s.push("peg$currPos = "+p.pop()+";"),a++;break;case r.POP_N:p.pop(t[a+1]),a+=2;break;case r.NIP:A=p.pop(),p.pop(),s.push(p.push(A)),a++;break;case r.APPEND:A=p.pop(),s.push(p.top()+".push("+A+");"),a++;break;case r.WRAP:s.push(p.push("["+p.pop(t[a+1]).join(", ")+"]")),a+=2;break;case r.TEXT:s.push(p.push("input.substring("+p.pop()+", peg$currPos)")),a++;break;case r.PLUCK:{const u=3,e=t[a+u-1],n=u+e;A=t.slice(a+u,a+n),A=1===e?p.index(A[0]):`[ ${A.map((u=>p.index(u))).join(", ")} ]`,p.pop(t[a+1]),s.push(p.push(A)),a+=n;break}case r.IF:C(p.top(),0);break;case r.IF_ERROR:C(p.top()+" === peg$FAILED",0);break;case r.IF_NOT_ERROR:C(p.top()+" !== peg$FAILED",0);break;case r.WHILE_NOT_ERROR:F(p.top()+" !== peg$FAILED");break;case r.MATCH_ANY:C("input.length > peg$currPos",0);break;case r.MATCH_STRING:C(u.literals[t[a+1]].length>1?"input.substr(peg$currPos, "+u.literals[t[a+1]].length+") === "+o(t[a+1]):"input.charCodeAt(peg$currPos) === "+u.literals[t[a+1]].charCodeAt(0),1);break;case r.MATCH_STRING_IC:C("input.substr(peg$currPos, "+u.literals[t[a+1]].length+").toLowerCase() === "+o(t[a+1]),1);break;case r.MATCH_CHAR_CLASS:C(l(t[a+1])+".test(input.charAt(peg$currPos))",1);break;case r.ACCEPT_N:s.push(p.push(t[a+1]>1?"input.substr(peg$currPos, "+t[a+1]+")":"input.charAt(peg$currPos)")),s.push(t[a+1]>1?"peg$currPos += "+t[a+1]+";":"peg$currPos++;"),a+=2;break;case r.ACCEPT_STRING:s.push(p.push(o(t[a+1]))),s.push(u.literals[t[a+1]].length>1?"peg$currPos += "+u.literals[t[a+1]].length+";":"peg$currPos++;"),a+=2;break;case r.FAIL:s.push(p.push("peg$FAILED")),s.push("if (peg$silentFails === 0) { peg$fail("+c(t[a+1])+"); }"),a+=2;break;case r.LOAD_SAVED_POS:s.push("peg$savedPos = "+p.index(t[a+1])+";"),a+=2;break;case r.UPDATE_SAVED_POS:s.push("peg$savedPos = peg$currPos;"),a++;break;case r.CALL:B();break;case r.RULE:s.push(p.push("peg$parse"+u.rules[t[a+1]].name+"()")),a+=2;break;case r.SILENT_FAILS_ON:s.push("peg$silentFails++;"),a++;break;case r.SILENT_FAILS_OFF:s.push("peg$silentFails--;"),a++;break;default:throw new Error("Invalid opcode: "+t[a]+".")}return s.join("\n")}(i.bytecode);return A.push("function peg$parse"+i.name+"() {"),e.trace&&A.push("  var startPos = peg$currPos;"),A.push(n(p.defines())),A.push(n(function(n,t){const r=[];return r.push(""),e.trace&&r.push(["peg$tracer.trace({",'  type: "rule.enter",',"  rule: "+n+",","  location: peg$computeLocation(startPos, startPos)","});",""].join("\n")),e.cache&&(r.push(["var key = peg$currPos * "+u.rules.length+" + "+t+";","var cached = peg$resultsCache[key];","","if (cached) {","  peg$currPos = cached.nextPos;",""].join("\n")),e.trace&&r.push(["if (cached.result !== peg$FAILED) {","  peg$tracer.trace({",'    type: "rule.match",',"    rule: "+n+",","    result: cached.result,","    location: peg$computeLocation(startPos, peg$currPos)","  });","} else {","  peg$tracer.trace({",'    type: "rule.fail",',"    rule: "+n+",","    location: peg$computeLocation(startPos, startPos)","  });","}",""].join("\n")),r.push(["  return cached.result;","}",""].join("\n"))),r.join("\n")}('"'+s(i.name)+'"',t.indexOfRule(u,i.name)))),A.push(n(C)),A.push(n(function(u,n){const t=[];return e.cache&&t.push(["","peg$resultsCache[key] = { nextPos: peg$currPos, result: "+n+" };"].join("\n")),e.trace&&t.push(["","if ("+n+" !== peg$FAILED) {","  peg$tracer.trace({",'    type: "rule.match",',"    rule: "+u+",","    result: "+n+",","    location: peg$computeLocation(startPos, peg$currPos)","  });","} else {","  peg$tracer.trace({",'    type: "rule.fail",',"    rule: "+u+",","    location: peg$computeLocation(startPos, startPos)","  });","}"].join("\n")),t.push(["","return "+n+";"].join("\n")),t.join("\n")}('"'+s(i.name)+'"',p.result()))),A.push("}"),A.join("\n")}(A))),i.push("")})),u.initializer&&(i.push(n(u.initializer.code)),i.push("")),i.push(["  peg$result = peg$startRuleFunction();","","  if (peg$result !== peg$FAILED && peg$currPos === input.length) {","    return peg$result;","  } else {","    if (peg$result !== peg$FAILED && peg$currPos < input.length) {","      peg$fail(peg$endExpectation());","    }","","    throw peg$buildStructuredError(","      peg$maxFailExpected,","      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,","      peg$maxFailPos < input.length","        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)","        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)","    );","  }","}"].join("\n")),i.join("\n")}())}},951:(u,e,n)=>{const t=n(176),r=n(533),a=n(783);function i(u){function e(u){return u.match=0}function n(u){return s(u.expression),u.match=1}function i(u){return u.match=s(u.expression)}function o(u,e){const n=u.length;let t=0,r=0;for(let e=0;e<n;++e){const n=s(u[e]);1===n&&++t,-1===n&&++r}return t===n?1:e?r===n?-1:0:r>0?-1:0}const s=t.build({rule(u){let e,n=0;if(void 0===u.match){u.match=0;do{if(e=u.match,u.match=s(u.expression),++n>6)throw new a("Infinity cycle detected when trying to evaluate node match result",u.location)}while(e!==u.match)}return u.match},named:i,choice:u=>u.match=o(u.alternatives,!0),action:i,sequence:u=>u.match=o(u.elements,!1),labeled:i,text:i,simple_and:i,simple_not:u=>u.match=-s(u.expression),optional:n,zero_or_more:n,one_or_more:i,group:i,semantic_and:e,semantic_not:e,rule_ref(e){const n=r.findRule(u,e.name);return e.match=s(n)},literal(u){const e=0===u.value.length?1:0;return u.match=e},class(u){const e=0===u.parts.length?-1:0;return u.match=e},any:e});s(u)}i.ALWAYS_MATCH=1,i.SOMETIMES_MATCH=0,i.NEVER_MATCH=-1,u.exports=i},350:(u,e,n)=>{const t=n(176);u.exports=function(u,e){const n=[];u.rules.forEach(((r,a)=>{var i;"rule"===(i=r).type&&"rule_ref"===i.expression.type&&(function(u,e,n){t.build({rule_ref(u){u.name===e&&(u.name=n)}})(u)}(u,r.name,r.expression.name),-1===e.allowedStartRules.indexOf(r.name)&&n.push(a))})),n.reverse(),n.forEach((e=>{u.rules.splice(e,1)}))}},547:(u,e,n)=>{const t=n(783),r=n(176);u.exports=function(u){function e(u){const e={};return Object.keys(u).forEach((n=>{e[n]=u[n]})),e}function n(u,n){a(u.expression,e(n))}const a=r.build({rule(u){a(u.expression,{})},choice(u,n){u.alternatives.forEach((u=>{a(u,e(n))}))},action:n,labeled(u,e){const n=u.label;if(n&&Object.prototype.hasOwnProperty.call(e,n))throw new t(`Label "${u.label}" is already defined`,u.labelLocation,[{message:"Original label location",location:e[n]}]);a(u.expression,e),e[u.label]=u.labelLocation},text:n,simple_and:n,simple_not:n,optional:n,zero_or_more:n,one_or_more:n,group:n});a(u)}},842:(u,e,n)=>{const t=n(783),r=n(176);u.exports=function(u){const e={};r.build({rule(u){if(Object.prototype.hasOwnProperty.call(e,u.name))throw new t(`Rule "${u.name}" is already defined`,u.nameLocation,[{message:"Original rule location",location:e[u.name]}]);e[u.name]=u.nameLocation}})(u)}},97:(u,e,n)=>{const t=n(783),r=n(176);u.exports=function(u){const e=r.build({action(u){e(u.expression,u)},labeled(u,n){if(u.pick&&n)throw new t('"@" cannot be used with an action block',u.labelLocation,[{message:"Action block location",location:n.codeLocation}]);e(u.expression)}});e(u)}},383:(u,e,n)=>{const t=n(783),r=n(533),a=n(176);u.exports=function(u){const e=[],n=[],i=a.build({rule(u){e.push(u.name),i(u.expression),e.pop()},sequence(e){e.elements.every((e=>(i(e),!r.alwaysConsumesOnSuccess(u,e))))},rule_ref(a){n.push(a);const o=r.findRule(u,a.name);if(-1!==e.indexOf(a.name))throw e.push(a.name),new t("Possible infinite loop when parsing (left recursion: "+e.join(" -> ")+")",o.nameLocation,n.map(((u,e,n)=>({message:e+1!==n.length?`Step ${e+1}: call of the rule "${u.name}" without input consumption`:`Step ${e+1}: call itself without input consumption - left recursion`,location:u.location}))));i(o),n.pop()}});i(u)}},574:(u,e,n)=>{const t=n(783),r=n(533),a=n(176);u.exports=function(u){a.build({zero_or_more(e){if(!r.alwaysConsumesOnSuccess(u,e.expression))throw new t("Possible infinite loop when parsing (repetition used with an expression that may not consume any input)",e.location)},one_or_more(e){if(!r.alwaysConsumesOnSuccess(u,e.expression))throw new t("Possible infinite loop when parsing (repetition used with an expression that may not consume any input)",e.location)}})(u)}},298:(u,e,n)=>{const t=n(783),r=n(533),a=n(176);u.exports=function(u){a.build({rule_ref(e){if(!r.findRule(u,e.name))throw new t(`Rule "${e.name}" is not defined`,e.location)}})(u)}},18:u=>{u.exports=class{constructor(u,e,n){this.sp=-1,this.maxSp=-1,this.varName=e,this.ruleName=u,this.type=n}name(u){if(u<0)throw new RangeError(`Rule '${this.ruleName}': The variable stack underflow: attempt to use a variable '${this.varName}<x>' at an index ${u}`);return this.varName+u}push(u){const e=this.name(++this.sp)+" = "+u+";";return this.sp>this.maxSp&&(this.maxSp=this.sp),e}pop(u){return void 0!==u?(this.sp-=u,Array.from({length:u},((u,e)=>this.name(this.sp+1+e)))):this.name(this.sp--)}top(){return this.name(this.sp)}index(u){if(u<0)throw new RangeError(`Rule '${this.ruleName}': The variable stack overflow: attempt to get a variable at a negative index ${u}`);return this.name(this.sp-u)}result(){if(this.maxSp<0)throw new RangeError(`Rule '${this.ruleName}': The variable stack is empty, can't get the result'`);return this.name(0)}defines(){return this.maxSp<0?"":this.type+" "+Array.from({length:this.maxSp+1},((u,e)=>this.name(e))).join(", ")+";"}checkedIf(u,e,n){const t=this.sp;if(e(),n){const e=this.sp;if(this.sp=t,n(),e!==this.sp)throw new Error("Rule '"+this.ruleName+"', position "+u+": Branches of a condition can't move the stack pointer differently (before: "+t+", after then: "+e+", after else: "+this.sp+").")}}checkedLoop(u,e){const n=this.sp;if(e(),n!==this.sp)throw new Error("Rule '"+this.ruleName+"', position "+u+": Body of a loop can't move the stack pointer (before: "+n+", after: "+this.sp+").")}}},176:u=>{const e={build(u){function e(e,...n){return u[e.type](e,...n)}function n(){}function t(u,...n){return e(u.expression,...n)}function r(u){return function(n,...t){n[u].forEach((u=>e(u,...t)))}}const a={grammar(u,...n){u.topLevelInitializer&&e(u.topLevelInitializer,...n),u.initializer&&e(u.initializer,...n),u.rules.forEach((u=>e(u,...n)))},top_level_initializer:n,initializer:n,rule:t,named:t,choice:r("alternatives"),action:t,sequence:r("elements"),labeled:t,text:t,simple_and:t,simple_not:t,optional:t,zero_or_more:t,one_or_more:t,group:t,semantic_and:n,semantic_not:n,rule_ref:n,literal:n,class:n,any:n};return Object.keys(a).forEach((e=>{Object.prototype.hasOwnProperty.call(u,e)||(u[e]=a[e])})),e}};u.exports=e},783:u=>{const e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(u,e){u.__proto__=e}||function(u,e){for(const n in e)Object.prototype.hasOwnProperty.call(e,n)&&(u[n]=e[n])};class n extends Error{constructor(u,t,r){super(u),e(this,n.prototype),this.name="GrammarError",this.location=t,void 0===r&&(r=[]),this.diagnostics=r}toString(){let u=super.toString();this.location&&(u+="\n at ",void 0!==this.location.source&&null!==this.location.source&&(u+=`${this.location.source}:`),u+=`${this.location.start.line}:${this.location.start.column}`);for(const e of this.diagnostics)u+="\n from ",void 0!==e.location.source&&null!==e.location.source&&(u+=`${e.location.source}:`),u+=`${e.location.start.line}:${e.location.start.column}: ${e.message}`;return u}format(u){const e=u.map((({source:u,text:e})=>({source:u,text:e.split(/\r\n|\n|\r/g)})));function n(u,n,t=""){let r="";const a=e.find((({source:e})=>e===u.source)),i=u.start;if(a){const e=u.end,o=a.text[i.line-1],s=i.line===e.line?e.column:o.length+1;t&&(r+=`\nnote: ${t}`),r+=`\n --\x3e ${u.source}:${i.line}:${i.column}\n${"".padEnd(n)} |\n${i.line.toString().padStart(n)} | ${o}\n${"".padEnd(n)} | ${"".padEnd(i.column-1)}${"".padEnd(s-i.column,"^")}`}else r+=`\n at ${u.source}:${i.line}:${i.column}`,t&&(r+=`: ${t}`);return r}let t;t=this.location?this.diagnostics.reduce(((u,{location:e})=>Math.max(u,e.start.line)),this.location.start.line):Math.max.apply(null,this.diagnostics.map((u=>u.location.start.line))),t=t.toString().length;let r=`Error: ${this.message}`;this.location&&(r+=n(this.location,t));for(const u of this.diagnostics)r+=n(u.location,t,u.message);return r}}u.exports=n},474:u=>{const e={$:"text","&":"simple_and","!":"simple_not"},n={"?":"optional","*":"zero_or_more","+":"one_or_more"},t={"&":"semantic_and","!":"semantic_not"};function r(u,e,n,t){var a=Error.call(this,u);return Object.setPrototypeOf&&Object.setPrototypeOf(a,r.prototype),a.expected=e,a.found=n,a.location=t,a.name="SyntaxError",a}function a(u,e,n){return n=n||" ",u.length>e?u:(e-=u.length,u+(n+=n.repeat(e)).slice(0,e))}!function(u,e){function n(){this.constructor=u}n.prototype=e.prototype,u.prototype=new n}(r,Error),r.prototype.format=function(u){var e="Error: "+this.message;if(this.location){var n,t=null;for(n=0;n<u.length;n++)if(u[n].source===this.location.source){t=u[n].text.split(/\r\n|\n|\r/g);break}var r=this.location.start,i=this.location.source+":"+r.line+":"+r.column;if(t){var o=this.location.end,s=a("",r.line.toString().length),A=t[r.line-1],l=r.line===o.line?o.column:A.length+1;e+="\n --\x3e "+i+"\n"+s+" |\n"+r.line+" | "+A+"\n"+s+" | "+a("",r.column-1)+a("",l-r.column,"^")}else e+="\n at "+i}return e},r.buildMessage=function(u,e){var n={literal:function(u){return'"'+r(u.text)+'"'},class:function(u){var e=u.parts.map((function(u){return Array.isArray(u)?a(u[0])+"-"+a(u[1]):a(u)}));return"["+(u.inverted?"^":"")+e+"]"},any:function(){return"any character"},end:function(){return"end of input"},other:function(u){return u.description}};function t(u){return u.charCodeAt(0).toString(16).toUpperCase()}function r(u){return u.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(u){return"\\x0"+t(u)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(u){return"\\x"+t(u)}))}function a(u){return u.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(u){return"\\x0"+t(u)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(u){return"\\x"+t(u)}))}function i(u){return n[u.type](u)}return"Expected "+function(u){var e,n,t=u.map(i);if(t.sort(),t.length>0){for(e=1,n=1;e<t.length;e++)t[e-1]!==t[e]&&(t[n]=t[e],n++);t.length=n}switch(t.length){case 1:return t[0];case 2:return t[0]+" or "+t[1];default:return t.slice(0,-1).join(", ")+", or "+t[t.length-1]}}(u)+" but "+function(u){return u?'"'+r(u)+'"':"end of input"}(e)+" found."},u.exports={SyntaxError:r,parse:function(u,a){var i,o={},s=(a=void 0!==a?a:{}).grammarSource,A={Grammar:Fe},l=Fe,c="{",E="}",p="/*",C="*/",F="\\",B='"',D="'",d=/^[\n\r\u2028\u2029]/,h=/^[0-9]/,f=/^[0-9a-f]/i,_=/^[{}]/,g=/^[a-z\xB5\xDF-\xF6\xF8-\xFF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137-\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148-\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E-\u0180\u0183\u0185\u0188\u018C-\u018D\u0192\u0195\u0199-\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA-\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9-\u01BA\u01BD-\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC-\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF-\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233-\u0239\u023C\u023F-\u0240\u0242\u0247\u0249\u024B\u024D\u024F-\u0293\u0295-\u02AF\u0371\u0373\u0377\u037B-\u037D\u0390\u03AC-\u03CE\u03D0-\u03D1\u03D5-\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F3\u03F5\u03F8\u03FB-\u03FC\u0430-\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE-\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0529\u052B\u052D\u052F\u0561-\u0587\u13F8-\u13FD\u1D00-\u1D2B\u1D6B-\u1D77\u1D79-\u1D9A\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95-\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF-\u1F07\u1F10-\u1F15\u1F20-\u1F27\u1F30-\u1F37\u1F40-\u1F45\u1F50-\u1F57\u1F60-\u1F67\u1F70-\u1F7D\u1F80-\u1F87\u1F90-\u1F97\u1FA0-\u1FA7\u1FB0-\u1FB4\u1FB6-\u1FB7\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FC7\u1FD0-\u1FD3\u1FD6-\u1FD7\u1FE0-\u1FE7\u1FF2-\u1FF4\u1FF6-\u1FF7\u210A\u210E-\u210F\u2113\u212F\u2134\u2139\u213C-\u213D\u2146-\u2149\u214E\u2184\u2C30-\u2C5E\u2C61\u2C65-\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73-\u2C74\u2C76-\u2C7B\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3-\u2CE4\u2CEC\u2CEE\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA699\uA69B\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F-\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F\uA771-\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uA78E\uA791\uA793-\uA795\uA797\uA799\uA79B\uA79D\uA79F\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\uA7B5\uA7B7\uA7FA\uAB30-\uAB5A\uAB60-\uAB65\uAB70-\uABBF\uFB00-\uFB06\uFB13-\uFB17\uFF41-\uFF5A]/,m=/^[\u02B0-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0374\u037A\u0559\u0640\u06E5-\u06E6\u07F4-\u07F5\u07FA\u081A\u0824\u0828\u0971\u0E46\u0EC6\u10FC\u17D7\u1843\u1AA7\u1C78-\u1C7D\u1D2C-\u1D6A\u1D78\u1D9B-\u1DBF\u2071\u207F\u2090-\u209C\u2C7C-\u2C7D\u2D6F\u2E2F\u3005\u3031-\u3035\u303B\u309D-\u309E\u30FC-\u30FE\uA015\uA4F8-\uA4FD\uA60C\uA67F\uA69C-\uA69D\uA717-\uA71F\uA770\uA788\uA7F8-\uA7F9\uA9CF\uA9E6\uAA70\uAADD\uAAF3-\uAAF4\uAB5C-\uAB5F\uFF70\uFF9E-\uFF9F]/,x=/^[\xAA\xBA\u01BB\u01C0-\u01C3\u0294\u05D0-\u05EA\u05F0-\u05F2\u0620-\u063F\u0641-\u064A\u066E-\u066F\u0671-\u06D3\u06D5\u06EE-\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u0800-\u0815\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0972-\u0980\u0985-\u098C\u098F-\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC-\u09DD\u09DF-\u09E1\u09F0-\u09F1\u0A05-\u0A0A\u0A0F-\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32-\u0A33\u0A35-\u0A36\u0A38-\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2-\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0-\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F-\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32-\u0B33\u0B35-\u0B39\u0B3D\u0B5C-\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99-\u0B9A\u0B9C\u0B9E-\u0B9F\u0BA3-\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60-\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0-\u0CE1\u0CF1-\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32-\u0E33\u0E40-\u0E45\u0E81-\u0E82\u0E84\u0E87-\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA-\u0EAB\u0EAD-\u0EB0\u0EB2-\u0EB3\u0EBD\u0EC0-\u0EC4\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065-\u1066\u106E-\u1070\u1075-\u1081\u108E\u10D0-\u10FA\u10FD-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17DC\u1820-\u1842\u1844-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE-\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C77\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5-\u1CF6\u2135-\u2138\u2D30-\u2D67\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3006\u303C\u3041-\u3096\u309F\u30A1-\u30FA\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA014\uA016-\uA48C\uA4D0-\uA4F7\uA500-\uA60B\uA610-\uA61F\uA62A-\uA62B\uA66E\uA6A0-\uA6E5\uA78F\uA7F7\uA7FB-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9E0-\uA9E4\uA9E7-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA6F\uAA71-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5-\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADC\uAAE0-\uAAEA\uAAF2\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40-\uFB41\uFB43-\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF66-\uFF6F\uFF71-\uFF9D\uFFA0-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,y=/^[\u01C5\u01C8\u01CB\u01F2\u1F88-\u1F8F\u1F98-\u1F9F\u1FA8-\u1FAF\u1FBC\u1FCC\u1FFC]/,v=/^[A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178-\u0179\u017B\u017D\u0181-\u0182\u0184\u0186-\u0187\u0189-\u018B\u018E-\u0191\u0193-\u0194\u0196-\u0198\u019C-\u019D\u019F-\u01A0\u01A2\u01A4\u01A6-\u01A7\u01A9\u01AC\u01AE-\u01AF\u01B1-\u01B3\u01B5\u01B7-\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A-\u023B\u023D-\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E-\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9-\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0-\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E-\u213F\u2145\u2183\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D-\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AD\uA7B0-\uA7B4\uA7B6\uFF21-\uFF3A]/,b=/^[\u0903\u093B\u093E-\u0940\u0949-\u094C\u094E-\u094F\u0982-\u0983\u09BE-\u09C0\u09C7-\u09C8\u09CB-\u09CC\u09D7\u0A03\u0A3E-\u0A40\u0A83\u0ABE-\u0AC0\u0AC9\u0ACB-\u0ACC\u0B02-\u0B03\u0B3E\u0B40\u0B47-\u0B48\u0B4B-\u0B4C\u0B57\u0BBE-\u0BBF\u0BC1-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCC\u0BD7\u0C01-\u0C03\u0C41-\u0C44\u0C82-\u0C83\u0CBE\u0CC0-\u0CC4\u0CC7-\u0CC8\u0CCA-\u0CCB\u0CD5-\u0CD6\u0D02-\u0D03\u0D3E-\u0D40\u0D46-\u0D48\u0D4A-\u0D4C\u0D57\u0D82-\u0D83\u0DCF-\u0DD1\u0DD8-\u0DDF\u0DF2-\u0DF3\u0F3E-\u0F3F\u0F7F\u102B-\u102C\u1031\u1038\u103B-\u103C\u1056-\u1057\u1062-\u1064\u1067-\u106D\u1083-\u1084\u1087-\u108C\u108F\u109A-\u109C\u17B6\u17BE-\u17C5\u17C7-\u17C8\u1923-\u1926\u1929-\u192B\u1930-\u1931\u1933-\u1938\u1A19-\u1A1A\u1A55\u1A57\u1A61\u1A63-\u1A64\u1A6D-\u1A72\u1B04\u1B35\u1B3B\u1B3D-\u1B41\u1B43-\u1B44\u1B82\u1BA1\u1BA6-\u1BA7\u1BAA\u1BE7\u1BEA-\u1BEC\u1BEE\u1BF2-\u1BF3\u1C24-\u1C2B\u1C34-\u1C35\u1CE1\u1CF2-\u1CF3\u302E-\u302F\uA823-\uA824\uA827\uA880-\uA881\uA8B4-\uA8C3\uA952-\uA953\uA983\uA9B4-\uA9B5\uA9BA-\uA9BB\uA9BD-\uA9C0\uAA2F-\uAA30\uAA33-\uAA34\uAA4D\uAA7B\uAA7D\uAAEB\uAAEE-\uAAEF\uAAF5\uABE3-\uABE4\uABE6-\uABE7\uABE9-\uABEA\uABEC]/,S=/^[\u0300-\u036F\u0483-\u0487\u0591-\u05BD\u05BF\u05C1-\u05C2\u05C4-\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7-\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E3-\u0902\u093A\u093C\u0941-\u0948\u094D\u0951-\u0957\u0962-\u0963\u0981\u09BC\u09C1-\u09C4\u09CD\u09E2-\u09E3\u0A01-\u0A02\u0A3C\u0A41-\u0A42\u0A47-\u0A48\u0A4B-\u0A4D\u0A51\u0A70-\u0A71\u0A75\u0A81-\u0A82\u0ABC\u0AC1-\u0AC5\u0AC7-\u0AC8\u0ACD\u0AE2-\u0AE3\u0B01\u0B3C\u0B3F\u0B41-\u0B44\u0B4D\u0B56\u0B62-\u0B63\u0B82\u0BC0\u0BCD\u0C00\u0C3E-\u0C40\u0C46-\u0C48\u0C4A-\u0C4D\u0C55-\u0C56\u0C62-\u0C63\u0C81\u0CBC\u0CBF\u0CC6\u0CCC-\u0CCD\u0CE2-\u0CE3\u0D01\u0D41-\u0D44\u0D4D\u0D62-\u0D63\u0DCA\u0DD2-\u0DD4\u0DD6\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB-\u0EBC\u0EC8-\u0ECD\u0F18-\u0F19\u0F35\u0F37\u0F39\u0F71-\u0F7E\u0F80-\u0F84\u0F86-\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102D-\u1030\u1032-\u1037\u1039-\u103A\u103D-\u103E\u1058-\u1059\u105E-\u1060\u1071-\u1074\u1082\u1085-\u1086\u108D\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752-\u1753\u1772-\u1773\u17B4-\u17B5\u17B7-\u17BD\u17C6\u17C9-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u1922\u1927-\u1928\u1932\u1939-\u193B\u1A17-\u1A18\u1A1B\u1A56\u1A58-\u1A5E\u1A60\u1A62\u1A65-\u1A6C\u1A73-\u1A7C\u1A7F\u1AB0-\u1ABD\u1B00-\u1B03\u1B34\u1B36-\u1B3A\u1B3C\u1B42\u1B6B-\u1B73\u1B80-\u1B81\u1BA2-\u1BA5\u1BA8-\u1BA9\u1BAB-\u1BAD\u1BE6\u1BE8-\u1BE9\u1BED\u1BEF-\u1BF1\u1C2C-\u1C33\u1C36-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE0\u1CE2-\u1CE8\u1CED\u1CF4\u1CF8-\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302D\u3099-\u309A\uA66F\uA674-\uA67D\uA69E-\uA69F\uA6F0-\uA6F1\uA802\uA806\uA80B\uA825-\uA826\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA951\uA980-\uA982\uA9B3\uA9B6-\uA9B9\uA9BC\uA9E5\uAA29-\uAA2E\uAA31-\uAA32\uAA35-\uAA36\uAA43\uAA4C\uAA7C\uAAB0\uAAB2-\uAAB4\uAAB7-\uAAB8\uAABE-\uAABF\uAAC1\uAAEC-\uAAED\uAAF6\uABE5\uABE8\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F]/,P=/^[0-9\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0BE6-\u0BEF\u0C66-\u0C6F\u0CE6-\u0CEF\u0D66-\u0D6F\u0DE6-\u0DEF\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F29\u1040-\u1049\u1090-\u1099\u17E0-\u17E9\u1810-\u1819\u1946-\u194F\u19D0-\u19D9\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\uA620-\uA629\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uA9F0-\uA9F9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19]/,k=/^[\u16EE-\u16F0\u2160-\u2182\u2185-\u2188\u3007\u3021-\u3029\u3038-\u303A\uA6E6-\uA6EF]/,L=/^[_\u203F-\u2040\u2054\uFE33-\uFE34\uFE4D-\uFE4F\uFF3F]/,I=/^[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/,T=Ae("{",!1),O=Ae("}",!1),R=Ae("=",!1),$=Ae("/",!1),w=Ae("@",!1),N=Ae(":",!1),j=Ae("$",!1),U=Ae("&",!1),H=Ae("!",!1),q=Ae("?",!1),M=Ae("*",!1),V=Ae("+",!1),W=Ae("(",!1),z=Ae(")",!1),G={type:"any"},Y=ce("whitespace"),X=Ae("\t",!1),J=Ae("\v",!1),Z=Ae("\f",!1),K=Ae(" ",!1),Q=Ae(" ",!1),uu=Ae("\ufeff",!1),eu=le(["\n","\r","\u2028","\u2029"],!1,!1),nu=ce("end of line"),tu=Ae("\n",!1),ru=Ae("\r\n",!1),au=Ae("\r",!1),iu=Ae("\u2028",!1),ou=Ae("\u2029",!1),su=ce("comment"),Au=Ae("/*",!1),lu=Ae("*/",!1),cu=Ae("//",!1),Eu=ce("identifier"),pu=Ae("_",!1),Cu=Ae("\\",!1),Fu=Ae("‌",!1),Bu=Ae("‍",!1),Du=ce("literal"),du=Ae("i",!1),hu=ce("string"),fu=Ae('"',!1),_u=Ae("'",!1),gu=ce("character class"),mu=Ae("[",!1),xu=Ae("^",!1),yu=Ae("]",!1),vu=Ae("-",!1),bu=Ae("0",!1),Su=Ae("b",!1),Pu=Ae("f",!1),ku=Ae("n",!1),Lu=Ae("r",!1),Iu=Ae("t",!1),Tu=Ae("v",!1),Ou=Ae("x",!1),Ru=Ae("u",!1),$u=le([["0","9"]],!1,!1),wu=le([["0","9"],["a","f"]],!1,!0),Nu=Ae(".",!1),ju=ce("code block"),Uu=le(["{","}"],!1,!1),Hu=le([["a","z"],"µ",["ß","ö"],["ø","ÿ"],"ā","ă","ą","ć","ĉ","ċ","č","ď","đ","ē","ĕ","ė","ę","ě","ĝ","ğ","ġ","ģ","ĥ","ħ","ĩ","ī","ĭ","į","ı","ĳ","ĵ",["ķ","ĸ"],"ĺ","ļ","ľ","ŀ","ł","ń","ņ",["ň","ŉ"],"ŋ","ō","ŏ","ő","œ","ŕ","ŗ","ř","ś","ŝ","ş","š","ţ","ť","ŧ","ũ","ū","ŭ","ů","ű","ų","ŵ","ŷ","ź","ż",["ž","ƀ"],"ƃ","ƅ","ƈ",["ƌ","ƍ"],"ƒ","ƕ",["ƙ","ƛ"],"ƞ","ơ","ƣ","ƥ","ƨ",["ƪ","ƫ"],"ƭ","ư","ƴ","ƶ",["ƹ","ƺ"],["ƽ","ƿ"],"ǆ","ǉ","ǌ","ǎ","ǐ","ǒ","ǔ","ǖ","ǘ","ǚ",["ǜ","ǝ"],"ǟ","ǡ","ǣ","ǥ","ǧ","ǩ","ǫ","ǭ",["ǯ","ǰ"],"ǳ","ǵ","ǹ","ǻ","ǽ","ǿ","ȁ","ȃ","ȅ","ȇ","ȉ","ȋ","ȍ","ȏ","ȑ","ȓ","ȕ","ȗ","ș","ț","ȝ","ȟ","ȡ","ȣ","ȥ","ȧ","ȩ","ȫ","ȭ","ȯ","ȱ",["ȳ","ȹ"],"ȼ",["ȿ","ɀ"],"ɂ","ɇ","ɉ","ɋ","ɍ",["ɏ","ʓ"],["ʕ","ʯ"],"ͱ","ͳ","ͷ",["ͻ","ͽ"],"ΐ",["ά","ώ"],["ϐ","ϑ"],["ϕ","ϗ"],"ϙ","ϛ","ϝ","ϟ","ϡ","ϣ","ϥ","ϧ","ϩ","ϫ","ϭ",["ϯ","ϳ"],"ϵ","ϸ",["ϻ","ϼ"],["а","џ"],"ѡ","ѣ","ѥ","ѧ","ѩ","ѫ","ѭ","ѯ","ѱ","ѳ","ѵ","ѷ","ѹ","ѻ","ѽ","ѿ","ҁ","ҋ","ҍ","ҏ","ґ","ғ","ҕ","җ","ҙ","қ","ҝ","ҟ","ҡ","ң","ҥ","ҧ","ҩ","ҫ","ҭ","ү","ұ","ҳ","ҵ","ҷ","ҹ","һ","ҽ","ҿ","ӂ","ӄ","ӆ","ӈ","ӊ","ӌ",["ӎ","ӏ"],"ӑ","ӓ","ӕ","ӗ","ә","ӛ","ӝ","ӟ","ӡ","ӣ","ӥ","ӧ","ө","ӫ","ӭ","ӯ","ӱ","ӳ","ӵ","ӷ","ӹ","ӻ","ӽ","ӿ","ԁ","ԃ","ԅ","ԇ","ԉ","ԋ","ԍ","ԏ","ԑ","ԓ","ԕ","ԗ","ԙ","ԛ","ԝ","ԟ","ԡ","ԣ","ԥ","ԧ","ԩ","ԫ","ԭ","ԯ",["ա","և"],["ᏸ","ᏽ"],["ᴀ","ᴫ"],["ᵫ","ᵷ"],["ᵹ","ᶚ"],"ḁ","ḃ","ḅ","ḇ","ḉ","ḋ","ḍ","ḏ","ḑ","ḓ","ḕ","ḗ","ḙ","ḛ","ḝ","ḟ","ḡ","ḣ","ḥ","ḧ","ḩ","ḫ","ḭ","ḯ","ḱ","ḳ","ḵ","ḷ","ḹ","ḻ","ḽ","ḿ","ṁ","ṃ","ṅ","ṇ","ṉ","ṋ","ṍ","ṏ","ṑ","ṓ","ṕ","ṗ","ṙ","ṛ","ṝ","ṟ","ṡ","ṣ","ṥ","ṧ","ṩ","ṫ","ṭ","ṯ","ṱ","ṳ","ṵ","ṷ","ṹ","ṻ","ṽ","ṿ","ẁ","ẃ","ẅ","ẇ","ẉ","ẋ","ẍ","ẏ","ẑ","ẓ",["ẕ","ẝ"],"ẟ","ạ","ả","ấ","ầ","ẩ","ẫ","ậ","ắ","ằ","ẳ","ẵ","ặ","ẹ","ẻ","ẽ","ế","ề","ể","ễ","ệ","ỉ","ị","ọ","ỏ","ố","ồ","ổ","ỗ","ộ","ớ","ờ","ở","ỡ","ợ","ụ","ủ","ứ","ừ","ử","ữ","ự","ỳ","ỵ","ỷ","ỹ","ỻ","ỽ",["ỿ","ἇ"],["ἐ","ἕ"],["ἠ","ἧ"],["ἰ","ἷ"],["ὀ","ὅ"],["ὐ","ὗ"],["ὠ","ὧ"],["ὰ","ώ"],["ᾀ","ᾇ"],["ᾐ","ᾗ"],["ᾠ","ᾧ"],["ᾰ","ᾴ"],["ᾶ","ᾷ"],"ι",["ῂ","ῄ"],["ῆ","ῇ"],["ῐ","ΐ"],["ῖ","ῗ"],["ῠ","ῧ"],["ῲ","ῴ"],["ῶ","ῷ"],"ℊ",["ℎ","ℏ"],"ℓ","ℯ","ℴ","ℹ",["ℼ","ℽ"],["ⅆ","ⅉ"],"ⅎ","ↄ",["ⰰ","ⱞ"],"ⱡ",["ⱥ","ⱦ"],"ⱨ","ⱪ","ⱬ","ⱱ",["ⱳ","ⱴ"],["ⱶ","ⱻ"],"ⲁ","ⲃ","ⲅ","ⲇ","ⲉ","ⲋ","ⲍ","ⲏ","ⲑ","ⲓ","ⲕ","ⲗ","ⲙ","ⲛ","ⲝ","ⲟ","ⲡ","ⲣ","ⲥ","ⲧ","ⲩ","ⲫ","ⲭ","ⲯ","ⲱ","ⲳ","ⲵ","ⲷ","ⲹ","ⲻ","ⲽ","ⲿ","ⳁ","ⳃ","ⳅ","ⳇ","ⳉ","ⳋ","ⳍ","ⳏ","ⳑ","ⳓ","ⳕ","ⳗ","ⳙ","ⳛ","ⳝ","ⳟ","ⳡ",["ⳣ","ⳤ"],"ⳬ","ⳮ","ⳳ",["ⴀ","ⴥ"],"ⴧ","ⴭ","ꙁ","ꙃ","ꙅ","ꙇ","ꙉ","ꙋ","ꙍ","ꙏ","ꙑ","ꙓ","ꙕ","ꙗ","ꙙ","ꙛ","ꙝ","ꙟ","ꙡ","ꙣ","ꙥ","ꙧ","ꙩ","ꙫ","ꙭ","ꚁ","ꚃ","ꚅ","ꚇ","ꚉ","ꚋ","ꚍ","ꚏ","ꚑ","ꚓ","ꚕ","ꚗ","ꚙ","ꚛ","ꜣ","ꜥ","ꜧ","ꜩ","ꜫ","ꜭ",["ꜯ","ꜱ"],"ꜳ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ꜿ","ꝁ","ꝃ","ꝅ","ꝇ","ꝉ","ꝋ","ꝍ","ꝏ","ꝑ","ꝓ","ꝕ","ꝗ","ꝙ","ꝛ","ꝝ","ꝟ","ꝡ","ꝣ","ꝥ","ꝧ","ꝩ","ꝫ","ꝭ","ꝯ",["ꝱ","ꝸ"],"ꝺ","ꝼ","ꝿ","ꞁ","ꞃ","ꞅ","ꞇ","ꞌ","ꞎ","ꞑ",["ꞓ","ꞕ"],"ꞗ","ꞙ","ꞛ","ꞝ","ꞟ","ꞡ","ꞣ","ꞥ","ꞧ","ꞩ","ꞵ","ꞷ","ꟺ",["ꬰ","ꭚ"],["ꭠ","ꭥ"],["ꭰ","ꮿ"],["ﬀ","ﬆ"],["ﬓ","ﬗ"],["ａ","ｚ"]],!1,!1),qu=le([["ʰ","ˁ"],["ˆ","ˑ"],["ˠ","ˤ"],"ˬ","ˮ","ʹ","ͺ","ՙ","ـ",["ۥ","ۦ"],["ߴ","ߵ"],"ߺ","ࠚ","ࠤ","ࠨ","ॱ","ๆ","ໆ","ჼ","ៗ","ᡃ","ᪧ",["ᱸ","ᱽ"],["ᴬ","ᵪ"],"ᵸ",["ᶛ","ᶿ"],"ⁱ","ⁿ",["ₐ","ₜ"],["ⱼ","ⱽ"],"ⵯ","ⸯ","々",["〱","〵"],"〻",["ゝ","ゞ"],["ー","ヾ"],"ꀕ",["ꓸ","ꓽ"],"ꘌ","ꙿ",["ꚜ","ꚝ"],["ꜗ","ꜟ"],"ꝰ","ꞈ",["ꟸ","ꟹ"],"ꧏ","ꧦ","ꩰ","ꫝ",["ꫳ","ꫴ"],["ꭜ","ꭟ"],"ｰ",["ﾞ","ﾟ"]],!1,!1),Mu=le(["ª","º","ƻ",["ǀ","ǃ"],"ʔ",["א","ת"],["װ","ײ"],["ؠ","ؿ"],["ف","ي"],["ٮ","ٯ"],["ٱ","ۓ"],"ە",["ۮ","ۯ"],["ۺ","ۼ"],"ۿ","ܐ",["ܒ","ܯ"],["ݍ","ޥ"],"ޱ",["ߊ","ߪ"],["ࠀ","ࠕ"],["ࡀ","ࡘ"],["ࢠ","ࢴ"],["ऄ","ह"],"ऽ","ॐ",["क़","ॡ"],["ॲ","ঀ"],["অ","ঌ"],["এ","ঐ"],["ও","ন"],["প","র"],"ল",["শ","হ"],"ঽ","ৎ",["ড়","ঢ়"],["য়","ৡ"],["ৰ","ৱ"],["ਅ","ਊ"],["ਏ","ਐ"],["ਓ","ਨ"],["ਪ","ਰ"],["ਲ","ਲ਼"],["ਵ","ਸ਼"],["ਸ","ਹ"],["ਖ਼","ੜ"],"ਫ਼",["ੲ","ੴ"],["અ","ઍ"],["એ","ઑ"],["ઓ","ન"],["પ","ર"],["લ","ળ"],["વ","હ"],"ઽ","ૐ",["ૠ","ૡ"],"ૹ",["ଅ","ଌ"],["ଏ","ଐ"],["ଓ","ନ"],["ପ","ର"],["ଲ","ଳ"],["ଵ","ହ"],"ଽ",["ଡ଼","ଢ଼"],["ୟ","ୡ"],"ୱ","ஃ",["அ","ஊ"],["எ","ஐ"],["ஒ","க"],["ங","ச"],"ஜ",["ஞ","ட"],["ண","த"],["ந","ப"],["ம","ஹ"],"ௐ",["అ","ఌ"],["ఎ","ఐ"],["ఒ","న"],["ప","హ"],"ఽ",["ౘ","ౚ"],["ౠ","ౡ"],["ಅ","ಌ"],["ಎ","ಐ"],["ಒ","ನ"],["ಪ","ಳ"],["ವ","ಹ"],"ಽ","ೞ",["ೠ","ೡ"],["ೱ","ೲ"],["അ","ഌ"],["എ","ഐ"],["ഒ","ഺ"],"ഽ","ൎ",["ൟ","ൡ"],["ൺ","ൿ"],["අ","ඖ"],["ක","න"],["ඳ","ර"],"ල",["ව","ෆ"],["ก","ะ"],["า","ำ"],["เ","ๅ"],["ກ","ຂ"],"ຄ",["ງ","ຈ"],"ຊ","ຍ",["ດ","ທ"],["ນ","ຟ"],["ມ","ຣ"],"ລ","ວ",["ສ","ຫ"],["ອ","ະ"],["າ","ຳ"],"ຽ",["ເ","ໄ"],["ໜ","ໟ"],"ༀ",["ཀ","ཇ"],["ཉ","ཬ"],["ྈ","ྌ"],["က","ဪ"],"ဿ",["ၐ","ၕ"],["ၚ","ၝ"],"ၡ",["ၥ","ၦ"],["ၮ","ၰ"],["ၵ","ႁ"],"ႎ",["ა","ჺ"],["ჽ","ቈ"],["ቊ","ቍ"],["ቐ","ቖ"],"ቘ",["ቚ","ቝ"],["በ","ኈ"],["ኊ","ኍ"],["ነ","ኰ"],["ኲ","ኵ"],["ኸ","ኾ"],"ዀ",["ዂ","ዅ"],["ወ","ዖ"],["ዘ","ጐ"],["ጒ","ጕ"],["ጘ","ፚ"],["ᎀ","ᎏ"],["ᐁ","ᙬ"],["ᙯ","ᙿ"],["ᚁ","ᚚ"],["ᚠ","ᛪ"],["ᛱ","ᛸ"],["ᜀ","ᜌ"],["ᜎ","ᜑ"],["ᜠ","ᜱ"],["ᝀ","ᝑ"],["ᝠ","ᝬ"],["ᝮ","ᝰ"],["ក","ឳ"],"ៜ",["ᠠ","ᡂ"],["ᡄ","ᡷ"],["ᢀ","ᢨ"],"ᢪ",["ᢰ","ᣵ"],["ᤀ","ᤞ"],["ᥐ","ᥭ"],["ᥰ","ᥴ"],["ᦀ","ᦫ"],["ᦰ","ᧉ"],["ᨀ","ᨖ"],["ᨠ","ᩔ"],["ᬅ","ᬳ"],["ᭅ","ᭋ"],["ᮃ","ᮠ"],["ᮮ","ᮯ"],["ᮺ","ᯥ"],["ᰀ","ᰣ"],["ᱍ","ᱏ"],["ᱚ","ᱷ"],["ᳩ","ᳬ"],["ᳮ","ᳱ"],["ᳵ","ᳶ"],["ℵ","ℸ"],["ⴰ","ⵧ"],["ⶀ","ⶖ"],["ⶠ","ⶦ"],["ⶨ","ⶮ"],["ⶰ","ⶶ"],["ⶸ","ⶾ"],["ⷀ","ⷆ"],["ⷈ","ⷎ"],["ⷐ","ⷖ"],["ⷘ","ⷞ"],"〆","〼",["ぁ","ゖ"],"ゟ",["ァ","ヺ"],"ヿ",["ㄅ","ㄭ"],["ㄱ","ㆎ"],["ㆠ","ㆺ"],["ㇰ","ㇿ"],["㐀","䶵"],["一","鿕"],["ꀀ","ꀔ"],["ꀖ","ꒌ"],["ꓐ","ꓷ"],["ꔀ","ꘋ"],["ꘐ","ꘟ"],["ꘪ","ꘫ"],"ꙮ",["ꚠ","ꛥ"],"ꞏ","ꟷ",["ꟻ","ꠁ"],["ꠃ","ꠅ"],["ꠇ","ꠊ"],["ꠌ","ꠢ"],["ꡀ","ꡳ"],["ꢂ","ꢳ"],["ꣲ","ꣷ"],"ꣻ","ꣽ",["ꤊ","ꤥ"],["ꤰ","ꥆ"],["ꥠ","ꥼ"],["ꦄ","ꦲ"],["ꧠ","ꧤ"],["ꧧ","ꧯ"],["ꧺ","ꧾ"],["ꨀ","ꨨ"],["ꩀ","ꩂ"],["ꩄ","ꩋ"],["ꩠ","ꩯ"],["ꩱ","ꩶ"],"ꩺ",["ꩾ","ꪯ"],"ꪱ",["ꪵ","ꪶ"],["ꪹ","ꪽ"],"ꫀ","ꫂ",["ꫛ","ꫜ"],["ꫠ","ꫪ"],"ꫲ",["ꬁ","ꬆ"],["ꬉ","ꬎ"],["ꬑ","ꬖ"],["ꬠ","ꬦ"],["ꬨ","ꬮ"],["ꯀ","ꯢ"],["가","힣"],["ힰ","ퟆ"],["ퟋ","ퟻ"],["豈","舘"],["並","龎"],"יִ",["ײַ","ﬨ"],["שׁ","זּ"],["טּ","לּ"],"מּ",["נּ","סּ"],["ףּ","פּ"],["צּ","ﮱ"],["ﯓ","ﴽ"],["ﵐ","ﶏ"],["ﶒ","ﷇ"],["ﷰ","ﷻ"],["ﹰ","ﹴ"],["ﹶ","ﻼ"],["ｦ","ｯ"],["ｱ","ﾝ"],["ﾠ","ﾾ"],["ￂ","ￇ"],["ￊ","ￏ"],["ￒ","ￗ"],["ￚ","ￜ"]],!1,!1),Vu=le(["ǅ","ǈ","ǋ","ǲ",["ᾈ","ᾏ"],["ᾘ","ᾟ"],["ᾨ","ᾯ"],"ᾼ","ῌ","ῼ"],!1,!1),Wu=le([["A","Z"],["À","Ö"],["Ø","Þ"],"Ā","Ă","Ą","Ć","Ĉ","Ċ","Č","Ď","Đ","Ē","Ĕ","Ė","Ę","Ě","Ĝ","Ğ","Ġ","Ģ","Ĥ","Ħ","Ĩ","Ī","Ĭ","Į","İ","Ĳ","Ĵ","Ķ","Ĺ","Ļ","Ľ","Ŀ","Ł","Ń","Ņ","Ň","Ŋ","Ō","Ŏ","Ő","Œ","Ŕ","Ŗ","Ř","Ś","Ŝ","Ş","Š","Ţ","Ť","Ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","Ŵ","Ŷ",["Ÿ","Ź"],"Ż","Ž",["Ɓ","Ƃ"],"Ƅ",["Ɔ","Ƈ"],["Ɖ","Ƌ"],["Ǝ","Ƒ"],["Ɠ","Ɣ"],["Ɩ","Ƙ"],["Ɯ","Ɲ"],["Ɵ","Ơ"],"Ƣ","Ƥ",["Ʀ","Ƨ"],"Ʃ","Ƭ",["Ʈ","Ư"],["Ʊ","Ƴ"],"Ƶ",["Ʒ","Ƹ"],"Ƽ","Ǆ","Ǉ","Ǌ","Ǎ","Ǐ","Ǒ","Ǔ","Ǖ","Ǘ","Ǚ","Ǜ","Ǟ","Ǡ","Ǣ","Ǥ","Ǧ","Ǩ","Ǫ","Ǭ","Ǯ","Ǳ","Ǵ",["Ƕ","Ǹ"],"Ǻ","Ǽ","Ǿ","Ȁ","Ȃ","Ȅ","Ȇ","Ȉ","Ȋ","Ȍ","Ȏ","Ȑ","Ȓ","Ȕ","Ȗ","Ș","Ț","Ȝ","Ȟ","Ƞ","Ȣ","Ȥ","Ȧ","Ȩ","Ȫ","Ȭ","Ȯ","Ȱ","Ȳ",["Ⱥ","Ȼ"],["Ƚ","Ⱦ"],"Ɂ",["Ƀ","Ɇ"],"Ɉ","Ɋ","Ɍ","Ɏ","Ͱ","Ͳ","Ͷ","Ϳ","Ά",["Έ","Ί"],"Ό",["Ύ","Ώ"],["Α","Ρ"],["Σ","Ϋ"],"Ϗ",["ϒ","ϔ"],"Ϙ","Ϛ","Ϝ","Ϟ","Ϡ","Ϣ","Ϥ","Ϧ","Ϩ","Ϫ","Ϭ","Ϯ","ϴ","Ϸ",["Ϲ","Ϻ"],["Ͻ","Я"],"Ѡ","Ѣ","Ѥ","Ѧ","Ѩ","Ѫ","Ѭ","Ѯ","Ѱ","Ѳ","Ѵ","Ѷ","Ѹ","Ѻ","Ѽ","Ѿ","Ҁ","Ҋ","Ҍ","Ҏ","Ґ","Ғ","Ҕ","Җ","Ҙ","Қ","Ҝ","Ҟ","Ҡ","Ң","Ҥ","Ҧ","Ҩ","Ҫ","Ҭ","Ү","Ұ","Ҳ","Ҵ","Ҷ","Ҹ","Һ","Ҽ","Ҿ",["Ӏ","Ӂ"],"Ӄ","Ӆ","Ӈ","Ӊ","Ӌ","Ӎ","Ӑ","Ӓ","Ӕ","Ӗ","Ә","Ӛ","Ӝ","Ӟ","Ӡ","Ӣ","Ӥ","Ӧ","Ө","Ӫ","Ӭ","Ӯ","Ӱ","Ӳ","Ӵ","Ӷ","Ӹ","Ӻ","Ӽ","Ӿ","Ԁ","Ԃ","Ԅ","Ԇ","Ԉ","Ԋ","Ԍ","Ԏ","Ԑ","Ԓ","Ԕ","Ԗ","Ԙ","Ԛ","Ԝ","Ԟ","Ԡ","Ԣ","Ԥ","Ԧ","Ԩ","Ԫ","Ԭ","Ԯ",["Ա","Ֆ"],["Ⴀ","Ⴥ"],"Ⴧ","Ⴭ",["Ꭰ","Ᏽ"],"Ḁ","Ḃ","Ḅ","Ḇ","Ḉ","Ḋ","Ḍ","Ḏ","Ḑ","Ḓ","Ḕ","Ḗ","Ḙ","Ḛ","Ḝ","Ḟ","Ḡ","Ḣ","Ḥ","Ḧ","Ḩ","Ḫ","Ḭ","Ḯ","Ḱ","Ḳ","Ḵ","Ḷ","Ḹ","Ḻ","Ḽ","Ḿ","Ṁ","Ṃ","Ṅ","Ṇ","Ṉ","Ṋ","Ṍ","Ṏ","Ṑ","Ṓ","Ṕ","Ṗ","Ṙ","Ṛ","Ṝ","Ṟ","Ṡ","Ṣ","Ṥ","Ṧ","Ṩ","Ṫ","Ṭ","Ṯ","Ṱ","Ṳ","Ṵ","Ṷ","Ṹ","Ṻ","Ṽ","Ṿ","Ẁ","Ẃ","Ẅ","Ẇ","Ẉ","Ẋ","Ẍ","Ẏ","Ẑ","Ẓ","Ẕ","ẞ","Ạ","Ả","Ấ","Ầ","Ẩ","Ẫ","Ậ","Ắ","Ằ","Ẳ","Ẵ","Ặ","Ẹ","Ẻ","Ẽ","Ế","Ề","Ể","Ễ","Ệ","Ỉ","Ị","Ọ","Ỏ","Ố","Ồ","Ổ","Ỗ","Ộ","Ớ","Ờ","Ở","Ỡ","Ợ","Ụ","Ủ","Ứ","Ừ","Ử","Ữ","Ự","Ỳ","Ỵ","Ỷ","Ỹ","Ỻ","Ỽ","Ỿ",["Ἀ","Ἇ"],["Ἐ","Ἕ"],["Ἠ","Ἧ"],["Ἰ","Ἷ"],["Ὀ","Ὅ"],"Ὑ","Ὓ","Ὕ","Ὗ",["Ὠ","Ὧ"],["Ᾰ","Ά"],["Ὲ","Ή"],["Ῐ","Ί"],["Ῠ","Ῥ"],["Ὸ","Ώ"],"ℂ","ℇ",["ℋ","ℍ"],["ℐ","ℒ"],"ℕ",["ℙ","ℝ"],"ℤ","Ω","ℨ",["K","ℭ"],["ℰ","ℳ"],["ℾ","ℿ"],"ⅅ","Ↄ",["Ⰰ","Ⱞ"],"Ⱡ",["Ɫ","Ɽ"],"Ⱨ","Ⱪ","Ⱬ",["Ɑ","Ɒ"],"Ⱳ","Ⱶ",["Ȿ","Ⲁ"],"Ⲃ","Ⲅ","Ⲇ","Ⲉ","Ⲋ","Ⲍ","Ⲏ","Ⲑ","Ⲓ","Ⲕ","Ⲗ","Ⲙ","Ⲛ","Ⲝ","Ⲟ","Ⲡ","Ⲣ","Ⲥ","Ⲧ","Ⲩ","Ⲫ","Ⲭ","Ⲯ","Ⲱ","Ⲳ","Ⲵ","Ⲷ","Ⲹ","Ⲻ","Ⲽ","Ⲿ","Ⳁ","Ⳃ","Ⳅ","Ⳇ","Ⳉ","Ⳋ","Ⳍ","Ⳏ","Ⳑ","Ⳓ","Ⳕ","Ⳗ","Ⳙ","Ⳛ","Ⳝ","Ⳟ","Ⳡ","Ⳣ","Ⳬ","Ⳮ","Ⳳ","Ꙁ","Ꙃ","Ꙅ","Ꙇ","Ꙉ","Ꙋ","Ꙍ","Ꙏ","Ꙑ","Ꙓ","Ꙕ","Ꙗ","Ꙙ","Ꙛ","Ꙝ","Ꙟ","Ꙡ","Ꙣ","Ꙥ","Ꙧ","Ꙩ","Ꙫ","Ꙭ","Ꚁ","Ꚃ","Ꚅ","Ꚇ","Ꚉ","Ꚋ","Ꚍ","Ꚏ","Ꚑ","Ꚓ","Ꚕ","Ꚗ","Ꚙ","Ꚛ","Ꜣ","Ꜥ","Ꜧ","Ꜩ","Ꜫ","Ꜭ","Ꜯ","Ꜳ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ꜿ","Ꝁ","Ꝃ","Ꝅ","Ꝇ","Ꝉ","Ꝋ","Ꝍ","Ꝏ","Ꝑ","Ꝓ","Ꝕ","Ꝗ","Ꝙ","Ꝛ","Ꝝ","Ꝟ","Ꝡ","Ꝣ","Ꝥ","Ꝧ","Ꝩ","Ꝫ","Ꝭ","Ꝯ","Ꝺ","Ꝼ",["Ᵹ","Ꝿ"],"Ꞁ","Ꞃ","Ꞅ","Ꞇ","Ꞌ","Ɥ","Ꞑ","Ꞓ","Ꞗ","Ꞙ","Ꞛ","Ꞝ","Ꞟ","Ꞡ","Ꞣ","Ꞥ","Ꞧ","Ꞩ",["Ɦ","Ɬ"],["Ʞ","Ꞵ"],"Ꞷ",["Ａ","Ｚ"]],!1,!1),zu=le(["ः","ऻ",["ा","ी"],["ॉ","ौ"],["ॎ","ॏ"],["ং","ঃ"],["া","ী"],["ে","ৈ"],["ো","ৌ"],"ৗ","ਃ",["ਾ","ੀ"],"ઃ",["ા","ી"],"ૉ",["ો","ૌ"],["ଂ","ଃ"],"ା","ୀ",["େ","ୈ"],["ୋ","ୌ"],"ୗ",["ா","ி"],["ு","ூ"],["ெ","ை"],["ொ","ௌ"],"ௗ",["ఁ","ః"],["ు","ౄ"],["ಂ","ಃ"],"ಾ",["ೀ","ೄ"],["ೇ","ೈ"],["ೊ","ೋ"],["ೕ","ೖ"],["ം","ഃ"],["ാ","ീ"],["െ","ൈ"],["ൊ","ൌ"],"ൗ",["ං","ඃ"],["ා","ෑ"],["ෘ","ෟ"],["ෲ","ෳ"],["༾","༿"],"ཿ",["ါ","ာ"],"ေ","း",["ျ","ြ"],["ၖ","ၗ"],["ၢ","ၤ"],["ၧ","ၭ"],["ႃ","ႄ"],["ႇ","ႌ"],"ႏ",["ႚ","ႜ"],"ា",["ើ","ៅ"],["ះ","ៈ"],["ᤣ","ᤦ"],["ᤩ","ᤫ"],["ᤰ","ᤱ"],["ᤳ","ᤸ"],["ᨙ","ᨚ"],"ᩕ","ᩗ","ᩡ",["ᩣ","ᩤ"],["ᩭ","ᩲ"],"ᬄ","ᬵ","ᬻ",["ᬽ","ᭁ"],["ᭃ","᭄"],"ᮂ","ᮡ",["ᮦ","ᮧ"],"᮪","ᯧ",["ᯪ","ᯬ"],"ᯮ",["᯲","᯳"],["ᰤ","ᰫ"],["ᰴ","ᰵ"],"᳡",["ᳲ","ᳳ"],["〮","〯"],["ꠣ","ꠤ"],"ꠧ",["ꢀ","ꢁ"],["ꢴ","ꣃ"],["ꥒ","꥓"],"ꦃ",["ꦴ","ꦵ"],["ꦺ","ꦻ"],["ꦽ","꧀"],["ꨯ","ꨰ"],["ꨳ","ꨴ"],"ꩍ","ꩻ","ꩽ","ꫫ",["ꫮ","ꫯ"],"ꫵ",["ꯣ","ꯤ"],["ꯦ","ꯧ"],["ꯩ","ꯪ"],"꯬"],!1,!1),Gu=le([["̀","ͯ"],["҃","҇"],["֑","ֽ"],"ֿ",["ׁ","ׂ"],["ׄ","ׅ"],"ׇ",["ؐ","ؚ"],["ً","ٟ"],"ٰ",["ۖ","ۜ"],["۟","ۤ"],["ۧ","ۨ"],["۪","ۭ"],"ܑ",["ܰ","݊"],["ަ","ް"],["߫","߳"],["ࠖ","࠙"],["ࠛ","ࠣ"],["ࠥ","ࠧ"],["ࠩ","࠭"],["࡙","࡛"],["ࣣ","ं"],"ऺ","़",["ु","ै"],"्",["॑","ॗ"],["ॢ","ॣ"],"ঁ","়",["ু","ৄ"],"্",["ৢ","ৣ"],["ਁ","ਂ"],"਼",["ੁ","ੂ"],["ੇ","ੈ"],["ੋ","੍"],"ੑ",["ੰ","ੱ"],"ੵ",["ઁ","ં"],"઼",["ુ","ૅ"],["ે","ૈ"],"્",["ૢ","ૣ"],"ଁ","଼","ି",["ୁ","ୄ"],"୍","ୖ",["ୢ","ୣ"],"ஂ","ீ","்","ఀ",["ా","ీ"],["ె","ై"],["ొ","్"],["ౕ","ౖ"],["ౢ","ౣ"],"ಁ","಼","ಿ","ೆ",["ೌ","್"],["ೢ","ೣ"],"ഁ",["ു","ൄ"],"്",["ൢ","ൣ"],"්",["ි","ු"],"ූ","ั",["ิ","ฺ"],["็","๎"],"ັ",["ິ","ູ"],["ົ","ຼ"],["່","ໍ"],["༘","༙"],"༵","༷","༹",["ཱ","ཾ"],["ྀ","྄"],["྆","྇"],["ྍ","ྗ"],["ྙ","ྼ"],"࿆",["ိ","ူ"],["ဲ","့"],["္","်"],["ွ","ှ"],["ၘ","ၙ"],["ၞ","ၠ"],["ၱ","ၴ"],"ႂ",["ႅ","ႆ"],"ႍ","ႝ",["፝","፟"],["ᜒ","᜔"],["ᜲ","᜴"],["ᝒ","ᝓ"],["ᝲ","ᝳ"],["឴","឵"],["ិ","ួ"],"ំ",["៉","៓"],"៝",["᠋","᠍"],"ᢩ",["ᤠ","ᤢ"],["ᤧ","ᤨ"],"ᤲ",["᤹","᤻"],["ᨗ","ᨘ"],"ᨛ","ᩖ",["ᩘ","ᩞ"],"᩠","ᩢ",["ᩥ","ᩬ"],["ᩳ","᩼"],"᩿",["᪰","᪽"],["ᬀ","ᬃ"],"᬴",["ᬶ","ᬺ"],"ᬼ","ᭂ",["᭫","᭳"],["ᮀ","ᮁ"],["ᮢ","ᮥ"],["ᮨ","ᮩ"],["᮫","ᮭ"],"᯦",["ᯨ","ᯩ"],"ᯭ",["ᯯ","ᯱ"],["ᰬ","ᰳ"],["ᰶ","᰷"],["᳐","᳒"],["᳔","᳠"],["᳢","᳨"],"᳭","᳴",["᳸","᳹"],["᷀","᷵"],["᷼","᷿"],["⃐","⃜"],"⃡",["⃥","⃰"],["⳯","⳱"],"⵿",["ⷠ","ⷿ"],["〪","〭"],["゙","゚"],"꙯",["ꙴ","꙽"],["ꚞ","ꚟ"],["꛰","꛱"],"ꠂ","꠆","ꠋ",["ꠥ","ꠦ"],"꣄",["꣠","꣱"],["ꤦ","꤭"],["ꥇ","ꥑ"],["ꦀ","ꦂ"],"꦳",["ꦶ","ꦹ"],"ꦼ","ꧥ",["ꨩ","ꨮ"],["ꨱ","ꨲ"],["ꨵ","ꨶ"],"ꩃ","ꩌ","ꩼ","ꪰ",["ꪲ","ꪴ"],["ꪷ","ꪸ"],["ꪾ","꪿"],"꫁",["ꫬ","ꫭ"],"꫶","ꯥ","ꯨ","꯭","ﬞ",["︀","️"],["︠","︯"]],!1,!1),Yu=le([["0","9"],["٠","٩"],["۰","۹"],["߀","߉"],["०","९"],["০","৯"],["੦","੯"],["૦","૯"],["୦","୯"],["௦","௯"],["౦","౯"],["೦","೯"],["൦","൯"],["෦","෯"],["๐","๙"],["໐","໙"],["༠","༩"],["၀","၉"],["႐","႙"],["០","៩"],["᠐","᠙"],["᥆","᥏"],["᧐","᧙"],["᪀","᪉"],["᪐","᪙"],["᭐","᭙"],["᮰","᮹"],["᱀","᱉"],["᱐","᱙"],["꘠","꘩"],["꣐","꣙"],["꤀","꤉"],["꧐","꧙"],["꧰","꧹"],["꩐","꩙"],["꯰","꯹"],["０","９"]],!1,!1),Xu=le([["ᛮ","ᛰ"],["Ⅰ","ↂ"],["ↅ","ↈ"],"〇",["〡","〩"],["〸","〺"],["ꛦ","ꛯ"]],!1,!1),Ju=le(["_",["‿","⁀"],"⁔",["︳","︴"],["﹍","﹏"],"＿"],!1,!1),Zu=le([" "," "," ",[" "," "]," "," ","　"],!1,!1),Ku=Ae(";",!1),Qu=function(u){return u.join("")},ue=function(u){return String.fromCharCode(parseInt(u,16))},ee=0,ne=0,te=[{line:1,column:1}],re=0,ae=[],ie=0;if("startRule"in a){if(!(a.startRule in A))throw new Error("Can't start parsing from rule \""+a.startRule+'".');l=A[a.startRule]}function oe(){return pe(ne,ee)}function se(u,e){throw function(u,e){return new r(u,null,null,e)}(u,e=void 0!==e?e:pe(ne,ee))}function Ae(u,e){return{type:"literal",text:u,ignoreCase:e}}function le(u,e,n){return{type:"class",parts:u,inverted:e,ignoreCase:n}}function ce(u){return{type:"other",description:u}}function Ee(e){var n,t=te[e];if(t)return t;for(n=e-1;!te[n];)n--;for(t={line:(t=te[n]).line,column:t.column};n<e;)10===u.charCodeAt(n)?(t.line++,t.column=1):t.column++,n++;return te[e]=t,t}function pe(u,e){var n=Ee(u),t=Ee(e);return{source:s,start:{offset:u,line:n.line,column:n.column},end:{offset:e,line:t.line,column:t.column}}}function Ce(u){ee<re||(ee>re&&(re=ee,ae=[]),ae.push(u))}function Fe(){var e,n,t,r,a,i;if(e=ee,Ge(),n=ee,t=function(){var e,n,t,r,a;return e=ee,123===u.charCodeAt(ee)?(n=c,ee++):(n=o,0===ie&&Ce(T)),n!==o&&(t=We())!==o?(125===u.charCodeAt(ee)?(r=E,ee++):(r=o,0===ie&&Ce(O)),r!==o&&Ye()!==o?(ne=e,e={type:"top_level_initializer",code:(a=t)[0],codeLocation:a[1],location:oe()}):(ee=e,e=o)):(ee=e,e=o),e}(),t!==o?(r=Ge(),n=t):(ee=n,n=o),n===o&&(n=null),t=ee,r=function(){var u,e,n;return u=ee,(e=We())!==o&&Ye()!==o?(ne=u,u={type:"initializer",code:(n=e)[0],codeLocation:n[1],location:oe()}):(ee=u,u=o),u}(),r!==o?(a=Ge(),t=r):(ee=t,t=o),t===o&&(t=null),r=[],a=ee,(i=Be())!==o?(Ge(),a=i):(ee=a,a=o),a!==o)for(;a!==o;)r.push(a),a=ee,(i=Be())!==o?(Ge(),a=i):(ee=a,a=o);else r=o;return r!==o?(ne=e,e={type:"grammar",topLevelInitializer:n,initializer:t,rules:r,location:oe()}):(ee=e,e=o),e}function Be(){var e,n,t,r,a,i,s,A;return e=ee,(n=Le())!==o?(Ge(),t=ee,(r=Oe())!==o?(Ge(),t=r):(ee=t,t=o),t===o&&(t=null),61===u.charCodeAt(ee)?(r="=",ee++):(r=o,0===ie&&Ce(R)),r!==o?(Ge(),(a=De())!==o&&Ye()!==o?(ne=e,s=t,A=a,e={type:"rule",name:(i=n)[0],nameLocation:i[1],expression:null!==s?{type:"named",name:s,expression:A,location:oe()}:A,location:oe()}):(ee=e,e=o)):(ee=e,e=o)):(ee=e,e=o),e}function De(){var e,n,t,r,a,i,s,A;if(e=ee,(n=de())!==o){for(t=[],r=ee,Ge(),47===u.charCodeAt(ee)?(a="/",ee++):(a=o,0===ie&&Ce($)),a!==o?(Ge(),(i=de())!==o?r=i:(ee=r,r=o)):(ee=r,r=o);r!==o;)t.push(r),r=ee,Ge(),47===u.charCodeAt(ee)?(a="/",ee++):(a=o,0===ie&&Ce($)),a!==o?(Ge(),(i=de())!==o?r=i:(ee=r,r=o)):(ee=r,r=o);ne=e,s=n,e=(A=t).length>0?{type:"choice",alternatives:[s].concat(A),location:oe()}:s}else ee=e,e=o;return e}function de(){var u,e,n,t,r,a;return u=ee,e=function(){var u,e,n,t,r,a,i;if(u=ee,(e=he())!==o){for(n=[],t=ee,Ge(),(r=he())!==o?t=r:(ee=t,t=o);t!==o;)n.push(t),t=ee,Ge(),(r=he())!==o?t=r:(ee=t,t=o);ne=u,a=e,u=(i=n).length>0||"labeled"===a.type&&a.pick?{type:"sequence",elements:[a].concat(i),location:oe()}:a}else ee=u,u=o;return u}(),e!==o?(n=ee,Ge(),(t=We())!==o?n=t:(ee=n,n=o),n===o&&(n=null),ne=u,r=e,u=null!==(a=n)?{type:"action",expression:r,code:a[0],codeLocation:a[1],location:oe()}:r):(ee=u,u=o),u}function he(){var e,n,t,r,a,i,s;return e=ee,n=function(){var e,n;return e=ee,64===u.charCodeAt(ee)?(n="@",ee++):(n=o,0===ie&&Ce(w)),n!==o&&(ne=e,n=oe()),n}(),n!==o?((t=fe())===o&&(t=null),(r=_e())!==o?(ne=e,a=n,i=t,(s=r).type.startsWith("semantic_")&&se('"@" cannot be used on a semantic predicate',a),e={type:"labeled",label:null!==i?i[0]:null,labelLocation:null!==i?i[1]:a,pick:!0,expression:s,location:oe()}):(ee=e,e=o)):(ee=e,e=o),e===o&&(e=ee,(n=fe())!==o?(t=Ge(),(r=_e())!==o?(ne=e,e=function(u,e){return{type:"labeled",label:u[0],labelLocation:u[1],expression:e,location:oe()}}(n,r)):(ee=e,e=o)):(ee=e,e=o),e===o&&(e=_e())),e}function fe(){var e,n,t,r;return e=ee,(n=Le())!==o?(Ge(),58===u.charCodeAt(ee)?(t=":",ee++):(t=o,0===ie&&Ce(N)),t!==o?(ne=e,r=n,Xe.indexOf(r[0])>=0&&se(`Label can't be a reserved word "${r[0]}"`,r[1]),e=r):(ee=e,e=o)):(ee=e,e=o),e}function _e(){var n,t,r;return n=ee,t=function(){var e;return 36===u.charCodeAt(ee)?(e="$",ee++):(e=o,0===ie&&Ce(j)),e===o&&(38===u.charCodeAt(ee)?(e="&",ee++):(e=o,0===ie&&Ce(U)),e===o&&(33===u.charCodeAt(ee)?(e="!",ee++):(e=o,0===ie&&Ce(H)))),e}(),t!==o?(Ge(),(r=ge())!==o?(ne=n,n={type:e[t],expression:r,location:oe()}):(ee=n,n=o)):(ee=n,n=o),n===o&&(n=ge()),n}function ge(){var e,t,r;return e=ee,(t=me())!==o?(Ge(),r=function(){var e;return 63===u.charCodeAt(ee)?(e="?",ee++):(e=o,0===ie&&Ce(q)),e===o&&(42===u.charCodeAt(ee)?(e="*",ee++):(e=o,0===ie&&Ce(M)),e===o&&(43===u.charCodeAt(ee)?(e="+",ee++):(e=o,0===ie&&Ce(V)))),e}(),r!==o?(ne=e,e={type:n[r],expression:t,location:oe()}):(ee=e,e=o)):(ee=e,e=o),e===o&&(e=me()),e}function me(){var e,n,r,a,i;return e=function(){var e,n,t;return ie++,e=ee,(n=Oe())!==o?(105===u.charCodeAt(ee)?(t="i",ee++):(t=o,0===ie&&Ce(du)),t===o&&(t=null),ne=e,e={type:"literal",value:n,ignoreCase:null!==t,location:oe()}):(ee=e,e=o),ie--,e===o&&(n=o,0===ie&&Ce(Du)),e}(),e===o&&(e=function(){var e,n,t,r,a,i,s,A;if(ie++,e=ee,91===u.charCodeAt(ee)?(n="[",ee++):(n=o,0===ie&&Ce(mu)),n!==o){for(94===u.charCodeAt(ee)?(t="^",ee++):(t=o,0===ie&&Ce(xu)),t===o&&(t=null),r=[],(a=we())===o&&(a=Ne());a!==o;)r.push(a),(a=we())===o&&(a=Ne());93===u.charCodeAt(ee)?(a="]",ee++):(a=o,0===ie&&Ce(yu)),a!==o?(105===u.charCodeAt(ee)?(i="i",ee++):(i=o,0===ie&&Ce(du)),i===o&&(i=null),ne=e,s=t,A=i,e={type:"class",parts:r.filter((u=>""!==u)),inverted:null!==s,ignoreCase:null!==A,location:oe()}):(ee=e,e=o)}else ee=e,e=o;return ie--,e===o&&(n=o,0===ie&&Ce(gu)),e}(),e===o&&(e=function(){var e,n;return e=ee,46===u.charCodeAt(ee)?(n=".",ee++):(n=o,0===ie&&Ce(Nu)),n!==o&&(ne=e,n={type:"any",location:oe()}),n}(),e===o&&(e=function(){var e,n,t,r,a,i,s;return e=ee,(n=Le())!==o?(t=ee,ie++,r=ee,a=Ge(),i=ee,(s=Oe())!==o?i=s=[s,Ge()]:(ee=i,i=o),i===o&&(i=null),61===u.charCodeAt(ee)?(s="=",ee++):(s=o,0===ie&&Ce(R)),s!==o?r=a=[a,i,s]:(ee=r,r=o),ie--,r===o?t=void 0:(ee=t,t=o),t!==o?(ne=e,e={type:"rule_ref",name:n[0],location:oe()}):(ee=e,e=o)):(ee=e,e=o),e}(),e===o&&(e=function(){var e,n,r,a;return e=ee,n=function(){var e;return 38===u.charCodeAt(ee)?(e="&",ee++):(e=o,0===ie&&Ce(U)),e===o&&(33===u.charCodeAt(ee)?(e="!",ee++):(e=o,0===ie&&Ce(H))),e}(),n!==o?(Ge(),(r=We())!==o?(ne=e,e={type:t[n],code:(a=r)[0],codeLocation:a[1],location:oe()}):(ee=e,e=o)):(ee=e,e=o),e}(),e===o&&(e=ee,40===u.charCodeAt(ee)?(n="(",ee++):(n=o,0===ie&&Ce(W)),n!==o?(Ge(),(r=De())!==o?(Ge(),41===u.charCodeAt(ee)?(a=")",ee++):(a=o,0===ie&&Ce(z)),a!==o?(ne=e,e="labeled"===(i=r).type||"sequence"===i.type?{type:"group",expression:i,location:oe()}:i):(ee=e,e=o)):(ee=e,e=o)):(ee=e,e=o)))))),e}function xe(){var e;return u.length>ee?(e=u.charAt(ee),ee++):(e=o,0===ie&&Ce(G)),e}function ye(){var e;return ie++,9===u.charCodeAt(ee)?(e="\t",ee++):(e=o,0===ie&&Ce(X)),e===o&&(11===u.charCodeAt(ee)?(e="\v",ee++):(e=o,0===ie&&Ce(J)),e===o&&(12===u.charCodeAt(ee)?(e="\f",ee++):(e=o,0===ie&&Ce(Z)),e===o&&(32===u.charCodeAt(ee)?(e=" ",ee++):(e=o,0===ie&&Ce(K)),e===o&&(160===u.charCodeAt(ee)?(e=" ",ee++):(e=o,0===ie&&Ce(Q)),e===o&&(65279===u.charCodeAt(ee)?(e="\ufeff",ee++):(e=o,0===ie&&Ce(uu)),e===o&&(e=function(){var e;return I.test(u.charAt(ee))?(e=u.charAt(ee),ee++):(e=o,0===ie&&Ce(Zu)),e}())))))),ie--,e===o&&0===ie&&Ce(Y),e}function ve(){var e;return d.test(u.charAt(ee))?(e=u.charAt(ee),ee++):(e=o,0===ie&&Ce(eu)),e}function be(){var e;return ie++,10===u.charCodeAt(ee)?(e="\n",ee++):(e=o,0===ie&&Ce(tu)),e===o&&("\r\n"===u.substr(ee,2)?(e="\r\n",ee+=2):(e=o,0===ie&&Ce(ru)),e===o&&(13===u.charCodeAt(ee)?(e="\r",ee++):(e=o,0===ie&&Ce(au)),e===o&&(8232===u.charCodeAt(ee)?(e="\u2028",ee++):(e=o,0===ie&&Ce(iu)),e===o&&(8233===u.charCodeAt(ee)?(e="\u2029",ee++):(e=o,0===ie&&Ce(ou)))))),ie--,e===o&&0===ie&&Ce(nu),e}function Se(){var e;return ie++,(e=function(){var e,n,t,r,a,i;if(e=ee,u.substr(ee,2)===p?(n=p,ee+=2):(n=o,0===ie&&Ce(Au)),n!==o){for(t=[],r=ee,a=ee,ie++,u.substr(ee,2)===C?(i=C,ee+=2):(i=o,0===ie&&Ce(lu)),ie--,i===o?a=void 0:(ee=a,a=o),a!==o&&(i=xe())!==o?r=a=[a,i]:(ee=r,r=o);r!==o;)t.push(r),r=ee,a=ee,ie++,u.substr(ee,2)===C?(i=C,ee+=2):(i=o,0===ie&&Ce(lu)),ie--,i===o?a=void 0:(ee=a,a=o),a!==o&&(i=xe())!==o?r=a=[a,i]:(ee=r,r=o);u.substr(ee,2)===C?(r=C,ee+=2):(r=o,0===ie&&Ce(lu)),r!==o?e=n=[n,t,r]:(ee=e,e=o)}else ee=e,e=o;return e}())===o&&(e=ke()),ie--,e===o&&0===ie&&Ce(su),e}function Pe(){var e,n,t,r,a,i;if(e=ee,u.substr(ee,2)===p?(n=p,ee+=2):(n=o,0===ie&&Ce(Au)),n!==o){for(t=[],r=ee,a=ee,ie++,u.substr(ee,2)===C?(i=C,ee+=2):(i=o,0===ie&&Ce(lu)),i===o&&(i=ve()),ie--,i===o?a=void 0:(ee=a,a=o),a!==o&&(i=xe())!==o?r=a=[a,i]:(ee=r,r=o);r!==o;)t.push(r),r=ee,a=ee,ie++,u.substr(ee,2)===C?(i=C,ee+=2):(i=o,0===ie&&Ce(lu)),i===o&&(i=ve()),ie--,i===o?a=void 0:(ee=a,a=o),a!==o&&(i=xe())!==o?r=a=[a,i]:(ee=r,r=o);u.substr(ee,2)===C?(r=C,ee+=2):(r=o,0===ie&&Ce(lu)),r!==o?e=n=[n,t,r]:(ee=e,e=o)}else ee=e,e=o;return e}function ke(){var e,n,t,r,a,i;if(e=ee,"//"===u.substr(ee,2)?(n="//",ee+=2):(n=o,0===ie&&Ce(cu)),n!==o){for(t=[],r=ee,a=ee,ie++,i=ve(),ie--,i===o?a=void 0:(ee=a,a=o),a!==o&&(i=xe())!==o?r=a=[a,i]:(ee=r,r=o);r!==o;)t.push(r),r=ee,a=ee,ie++,i=ve(),ie--,i===o?a=void 0:(ee=a,a=o),a!==o&&(i=xe())!==o?r=a=[a,i]:(ee=r,r=o);e=n=[n,t]}else ee=e,e=o;return e}function Le(){var u,e,n,t;if(ie++,u=ee,(e=Ie())!==o){for(n=[],t=Te();t!==o;)n.push(t),t=Te();ne=u,u=[e+n.join(""),oe()]}else ee=u,u=o;return ie--,u===o&&(e=o,0===ie&&Ce(Eu)),u}function Ie(){var e,n,t;return(e=function(){var e;return(e=function(){var e;return v.test(u.charAt(ee))?(e=u.charAt(ee),ee++):(e=o,0===ie&&Ce(Wu)),e}())===o&&(e=function(){var e;return g.test(u.charAt(ee))?(e=u.charAt(ee),ee++):(e=o,0===ie&&Ce(Hu)),e}())===o&&(e=function(){var e;return y.test(u.charAt(ee))?(e=u.charAt(ee),ee++):(e=o,0===ie&&Ce(Vu)),e}())===o&&(e=function(){var e;return m.test(u.charAt(ee))?(e=u.charAt(ee),ee++):(e=o,0===ie&&Ce(qu)),e}())===o&&(e=function(){var e;return x.test(u.charAt(ee))?(e=u.charAt(ee),ee++):(e=o,0===ie&&Ce(Mu)),e}())===o&&(e=function(){var e;return k.test(u.charAt(ee))?(e=u.charAt(ee),ee++):(e=o,0===ie&&Ce(Xu)),e}()),e}())===o&&(36===u.charCodeAt(ee)?(e="$",ee++):(e=o,0===ie&&Ce(j)),e===o&&(95===u.charCodeAt(ee)?(e="_",ee++):(e=o,0===ie&&Ce(pu)),e===o&&(e=ee,92===u.charCodeAt(ee)?(n=F,ee++):(n=o,0===ie&&Ce(Cu)),n!==o&&(t=qe())!==o?e=t:(ee=e,e=o)))),e}function Te(){var e;return(e=Ie())===o&&(e=function(){var e;return(e=function(){var e;return S.test(u.charAt(ee))?(e=u.charAt(ee),ee++):(e=o,0===ie&&Ce(Gu)),e}())===o&&(e=function(){var e;return b.test(u.charAt(ee))?(e=u.charAt(ee),ee++):(e=o,0===ie&&Ce(zu)),e}()),e}())===o&&(e=function(){var e;return P.test(u.charAt(ee))?(e=u.charAt(ee),ee++):(e=o,0===ie&&Ce(Yu)),e}())===o&&(e=function(){var e;return L.test(u.charAt(ee))?(e=u.charAt(ee),ee++):(e=o,0===ie&&Ce(Ju)),e}())===o&&(8204===u.charCodeAt(ee)?(e="‌",ee++):(e=o,0===ie&&Ce(Fu)),e===o&&(8205===u.charCodeAt(ee)?(e="‍",ee++):(e=o,0===ie&&Ce(Bu)))),e}function Oe(){var e,n,t,r;if(ie++,e=ee,34===u.charCodeAt(ee)?(n=B,ee++):(n=o,0===ie&&Ce(fu)),n!==o){for(t=[],r=Re();r!==o;)t.push(r),r=Re();34===u.charCodeAt(ee)?(r=B,ee++):(r=o,0===ie&&Ce(fu)),r!==o?(ne=e,e=Qu(t)):(ee=e,e=o)}else ee=e,e=o;if(e===o)if(e=ee,39===u.charCodeAt(ee)?(n=D,ee++):(n=o,0===ie&&Ce(_u)),n!==o){for(t=[],r=$e();r!==o;)t.push(r),r=$e();39===u.charCodeAt(ee)?(r=D,ee++):(r=o,0===ie&&Ce(_u)),r!==o?(ne=e,e=Qu(t)):(ee=e,e=o)}else ee=e,e=o;return ie--,e===o&&(n=o,0===ie&&Ce(hu)),e}function Re(){var e,n,t,r;return e=ee,n=ee,t=ee,ie++,34===u.charCodeAt(ee)?(r=B,ee++):(r=o,0===ie&&Ce(fu)),r===o&&(92===u.charCodeAt(ee)?(r=F,ee++):(r=o,0===ie&&Ce(Cu)),r===o&&(r=ve())),ie--,r===o?t=void 0:(ee=t,t=o),t!==o&&(r=xe())!==o?n=t=[t,r]:(ee=n,n=o),(e=n!==o?u.substring(e,ee):n)===o&&(e=ee,92===u.charCodeAt(ee)?(n=F,ee++):(n=o,0===ie&&Ce(Cu)),n!==o&&(t=Ue())!==o?e=t:(ee=e,e=o),e===o&&(e=je())),e}function $e(){var e,n,t,r;return e=ee,n=ee,t=ee,ie++,39===u.charCodeAt(ee)?(r=D,ee++):(r=o,0===ie&&Ce(_u)),r===o&&(92===u.charCodeAt(ee)?(r=F,ee++):(r=o,0===ie&&Ce(Cu)),r===o&&(r=ve())),ie--,r===o?t=void 0:(ee=t,t=o),t!==o&&(r=xe())!==o?n=t=[t,r]:(ee=n,n=o),(e=n!==o?u.substring(e,ee):n)===o&&(e=ee,92===u.charCodeAt(ee)?(n=F,ee++):(n=o,0===ie&&Ce(Cu)),n!==o&&(t=Ue())!==o?e=t:(ee=e,e=o),e===o&&(e=je())),e}function we(){var e,n,t,r,a,i;return e=ee,(n=Ne())!==o?(45===u.charCodeAt(ee)?(t="-",ee++):(t=o,0===ie&&Ce(vu)),t!==o&&(r=Ne())!==o?(ne=e,i=r,(a=n).charCodeAt(0)>i.charCodeAt(0)&&se("Invalid character range: "+u.substring(ne,ee)+"."),e=[a,i]):(ee=e,e=o)):(ee=e,e=o),e}function Ne(){var e,n,t,r;return e=ee,n=ee,t=ee,ie++,93===u.charCodeAt(ee)?(r="]",ee++):(r=o,0===ie&&Ce(yu)),r===o&&(92===u.charCodeAt(ee)?(r=F,ee++):(r=o,0===ie&&Ce(Cu)),r===o&&(r=ve())),ie--,r===o?t=void 0:(ee=t,t=o),t!==o&&(r=xe())!==o?n=t=[t,r]:(ee=n,n=o),(e=n!==o?u.substring(e,ee):n)===o&&(e=ee,92===u.charCodeAt(ee)?(n=F,ee++):(n=o,0===ie&&Ce(Cu)),n!==o&&(t=Ue())!==o?e=t:(ee=e,e=o),e===o&&(e=je())),e}function je(){var e,n;return e=ee,92===u.charCodeAt(ee)?(n=F,ee++):(n=o,0===ie&&Ce(Cu)),n!==o&&be()!==o?(ne=e,e=""):(ee=e,e=o),e}function Ue(){var e,n,t,r;return e=function(){var e;return(e=He())===o&&(e=function(){var e,n,t,r;return e=ee,n=ee,t=ee,ie++,r=function(){var e;return(e=He())===o&&(e=Me())===o&&(120===u.charCodeAt(ee)?(e="x",ee++):(e=o,0===ie&&Ce(Ou)),e===o&&(117===u.charCodeAt(ee)?(e="u",ee++):(e=o,0===ie&&Ce(Ru)))),e}(),r===o&&(r=ve()),ie--,r===o?t=void 0:(ee=t,t=o),t!==o&&(r=xe())!==o?n=t=[t,r]:(ee=n,n=o),e=n!==o?u.substring(e,ee):n}()),e}(),e===o&&(e=ee,48===u.charCodeAt(ee)?(n="0",ee++):(n=o,0===ie&&Ce(bu)),n!==o?(t=ee,ie++,r=Me(),ie--,r===o?t=void 0:(ee=t,t=o),t!==o?(ne=e,e="\0"):(ee=e,e=o)):(ee=e,e=o),e===o&&(e=function(){var e,n,t,r,a,i;return e=ee,120===u.charCodeAt(ee)?(n="x",ee++):(n=o,0===ie&&Ce(Ou)),n!==o?(t=ee,r=ee,(a=Ve())!==o&&(i=Ve())!==o?r=a=[a,i]:(ee=r,r=o),(t=r!==o?u.substring(t,ee):r)!==o?(ne=e,e=ue(t)):(ee=e,e=o)):(ee=e,e=o),e}(),e===o&&(e=qe()))),e}function He(){var e,n;return 39===u.charCodeAt(ee)?(e=D,ee++):(e=o,0===ie&&Ce(_u)),e===o&&(34===u.charCodeAt(ee)?(e=B,ee++):(e=o,0===ie&&Ce(fu)),e===o&&(92===u.charCodeAt(ee)?(e=F,ee++):(e=o,0===ie&&Ce(Cu)),e===o&&(e=ee,98===u.charCodeAt(ee)?(n="b",ee++):(n=o,0===ie&&Ce(Su)),n!==o&&(ne=e,n="\b"),(e=n)===o&&(e=ee,102===u.charCodeAt(ee)?(n="f",ee++):(n=o,0===ie&&Ce(Pu)),n!==o&&(ne=e,n="\f"),(e=n)===o&&(e=ee,110===u.charCodeAt(ee)?(n="n",ee++):(n=o,0===ie&&Ce(ku)),n!==o&&(ne=e,n="\n"),(e=n)===o&&(e=ee,114===u.charCodeAt(ee)?(n="r",ee++):(n=o,0===ie&&Ce(Lu)),n!==o&&(ne=e,n="\r"),(e=n)===o&&(e=ee,116===u.charCodeAt(ee)?(n="t",ee++):(n=o,0===ie&&Ce(Iu)),n!==o&&(ne=e,n="\t"),(e=n)===o&&(e=ee,118===u.charCodeAt(ee)?(n="v",ee++):(n=o,0===ie&&Ce(Tu)),n!==o&&(ne=e,n="\v"),e=n)))))))),e}function qe(){var e,n,t,r,a,i,s,A;return e=ee,117===u.charCodeAt(ee)?(n="u",ee++):(n=o,0===ie&&Ce(Ru)),n!==o?(t=ee,r=ee,(a=Ve())!==o&&(i=Ve())!==o&&(s=Ve())!==o&&(A=Ve())!==o?r=a=[a,i,s,A]:(ee=r,r=o),(t=r!==o?u.substring(t,ee):r)!==o?(ne=e,e=ue(t)):(ee=e,e=o)):(ee=e,e=o),e}function Me(){var e;return h.test(u.charAt(ee))?(e=u.charAt(ee),ee++):(e=o,0===ie&&Ce($u)),e}function Ve(){var e;return f.test(u.charAt(ee))?(e=u.charAt(ee),ee++):(e=o,0===ie&&Ce(wu)),e}function We(){var e,n,t,r;return ie++,e=ee,123===u.charCodeAt(ee)?(n=c,ee++):(n=o,0===ie&&Ce(T)),n!==o?(t=function(){var u,e;return u=ee,e=ze(),ne=u,e=[e,oe()]}(),125===u.charCodeAt(ee)?(r=E,ee++):(r=o,0===ie&&Ce(O)),r!==o?e=t:(ee=e,e=o)):(ee=e,e=o),ie--,e===o&&(n=o,0===ie&&Ce(ju)),e}function ze(){var e,n,t,r,a,i;if(e=ee,n=[],t=[],r=ee,a=ee,ie++,_.test(u.charAt(ee))?(i=u.charAt(ee),ee++):(i=o,0===ie&&Ce(Uu)),ie--,i===o?a=void 0:(ee=a,a=o),a!==o&&(i=xe())!==o?r=a=[a,i]:(ee=r,r=o),r!==o)for(;r!==o;)t.push(r),r=ee,a=ee,ie++,_.test(u.charAt(ee))?(i=u.charAt(ee),ee++):(i=o,0===ie&&Ce(Uu)),ie--,i===o?a=void 0:(ee=a,a=o),a!==o&&(i=xe())!==o?r=a=[a,i]:(ee=r,r=o);else t=o;for(t===o&&(t=ee,123===u.charCodeAt(ee)?(r=c,ee++):(r=o,0===ie&&Ce(T)),r!==o?(a=ze(),125===u.charCodeAt(ee)?(i=E,ee++):(i=o,0===ie&&Ce(O)),i!==o?t=r=[r,a,i]:(ee=t,t=o)):(ee=t,t=o));t!==o;){if(n.push(t),t=[],r=ee,a=ee,ie++,_.test(u.charAt(ee))?(i=u.charAt(ee),ee++):(i=o,0===ie&&Ce(Uu)),ie--,i===o?a=void 0:(ee=a,a=o),a!==o&&(i=xe())!==o?r=a=[a,i]:(ee=r,r=o),r!==o)for(;r!==o;)t.push(r),r=ee,a=ee,ie++,_.test(u.charAt(ee))?(i=u.charAt(ee),ee++):(i=o,0===ie&&Ce(Uu)),ie--,i===o?a=void 0:(ee=a,a=o),a!==o&&(i=xe())!==o?r=a=[a,i]:(ee=r,r=o);else t=o;t===o&&(t=ee,123===u.charCodeAt(ee)?(r=c,ee++):(r=o,0===ie&&Ce(T)),r!==o?(a=ze(),125===u.charCodeAt(ee)?(i=E,ee++):(i=o,0===ie&&Ce(O)),i!==o?t=r=[r,a,i]:(ee=t,t=o)):(ee=t,t=o))}return u.substring(e,ee)}function Ge(){var u,e;for(u=[],(e=ye())===o&&(e=be())===o&&(e=Se());e!==o;)u.push(e),(e=ye())===o&&(e=be())===o&&(e=Se());return u}function Ye(){var e,n,t,r;return e=ee,n=Ge(),59===u.charCodeAt(ee)?(t=";",ee++):(t=o,0===ie&&Ce(Ku)),t!==o?e=n=[n,t]:(ee=e,e=o),e===o&&(e=ee,n=function(){var u,e;for(u=[],(e=ye())===o&&(e=Pe());e!==o;)u.push(e),(e=ye())===o&&(e=Pe());return u}(),(t=ke())===o&&(t=null),(r=be())!==o?e=n=[n,t,r]:(ee=e,e=o),e===o&&(e=ee,n=Ge(),t=function(){var e,n;return e=ee,ie++,u.length>ee?(n=u.charAt(ee),ee++):(n=o,0===ie&&Ce(G)),ie--,n===o?e=void 0:(ee=e,e=o),e}(),t!==o?e=n=[n,t]:(ee=e,e=o))),e}const Xe=a.reservedWords||[];if((i=l())!==o&&ee===u.length)return i;throw i!==o&&ee<u.length&&Ce({type:"end"}),function(u,e,n){return new r(r.buildMessage(u,e),u,e,n)}(ae,re<u.length?u.charAt(re):null,re<u.length?pe(re,re+1):pe(re,re))}}},666:(u,e,n)=>{const t=n(783),r=n(378),a=n(474),i={VERSION:n(889),RESERVED_WORDS:["break","case","catch","class","const","continue","debugger","default","delete","do","else","export","extends","finally","for","function","if","import","in","instanceof","new","return","super","switch","this","throw","try","typeof","var","void","while","with","null","true","false","enum","implements","interface","let","package","private","protected","public","static","yield","await"],GrammarError:t,parser:a,compiler:r,generate(u,e){const n="plugins"in(e=void 0!==e?e:{})?e.plugins:[],t={parser:i.parser,passes:function(u){const e={};return Object.keys(u).forEach((n=>{e[n]=u[n].slice()})),e}(i.compiler.passes),reservedWords:i.RESERVED_WORDS.slice()};return n.forEach((u=>{u.use(t,e)})),i.compiler.compile(t.parser.parse(u,{grammarSource:e.grammarSource,reservedWords:t.reservedWords}),t.passes,e)}};u.exports=i},889:u=>{u.exports="1.2.0"}},__webpack_module_cache__={};function __webpack_require__(u){var e=__webpack_module_cache__[u];if(void 0!==e)return e.exports;var n=__webpack_module_cache__[u]={exports:{}};return __webpack_modules__[u](n,n.exports,__webpack_require__),n.exports}var __webpack_exports__={};(()=>{var u=__webpack_require__(666);function e(u,e){var t="undefined"!=typeof Symbol&&u[Symbol.iterator]||u["@@iterator"];if(!t){if(Array.isArray(u)||(t=function(u,e){if(u){if("string"==typeof u)return n(u,e);var t=Object.prototype.toString.call(u).slice(8,-1);return"Object"===t&&u.constructor&&(t=u.constructor.name),"Map"===t||"Set"===t?Array.from(u):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?n(u,e):void 0}}(u))||e&&u&&"number"==typeof u.length){t&&(u=t);var r=0,a=function(){};return{s:a,n:function(){return r>=u.length?{done:!0}:{done:!1,value:u[r++]}},e:function(u){throw u},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,o=!0,s=!1;return{s:function(){t=t.call(u)},n:function(){var u=t.next();return o=u.done,u},e:function(u){s=!0,i=u},f:function(){try{o||null==t.return||t.return()}finally{if(s)throw i}}}}function n(u,e){(null==e||e>u.length)&&(e=u.length);for(var n=0,t=new Array(e);n<e;n++)t[n]=u[n];return t}function t(u,e){for(var n=0;n<e.length;n++){var t=e[n];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(u,t.key,t)}}function r(u,e){if(!(u instanceof e))throw new TypeError("Cannot call a class as a function")}var a=function u(e,n,t){r(this,u),this.name=e,this.body=n,this.args=t},i=function u(){r(this,u),this.functions={},this.values={},this.result=null,this.is_return=!1,this.print=null};function o(u,e){if(""===u)return e.length;if(""===e)return u.length;if(u[0]===e[0])return o(u.slice(1),e.slice(1));var n=o(u.slice(0),e.slice(1)),t=o(u.slice(1),e.slice(0)),r=o(u.slice(1),e.slice(1));return 1+Math.min(n,t,r)}function s(u,e,n){if(e in u)return e;var t=Number.MAX_SAFE_INTEGER,r=null;for(var a in u){var i=1*o(e,a)/e.length;i<t&&i<=n&&(r=a,t=i)}return null!==r?r:e}var A=function(){function u(){r(this,u),this.THRESHOLD=.25}var n,i;return n=u,(i=[{key:"Identifier",value:function(u,e){var n=s(u.values,e,this.THRESHOLD);return u.values[n]}},{key:"Assign",value:function(u,e,n,t){var r=this.evalute(u,e),a=s(u.values,n.name,this.THRESHOLD);switch(r){case"=":return u.values[a]=t;case"+=":return u.values[a]+=t;case"-=":return u.values[a]-=t;case"*=":return u.values[a]*=t;case"/=":return u.values[a]/=t;case"%=":return u.values[a]%=t;case"<<=":return u.values[a]<<=t;case">>=":return u.values[a]>>=t;case">>>=":return u.values[a]>>>=t;case"|=":return u.values[a]|=t;case"^=":return u.values[a]^=t;case"&=":return u.values[a]&=t}}},{key:"Program",value:function(u,n){var t,r=e(n);try{for(r.s();!(t=r.n()).done;){var a=t.value;if(this.evalute(u,a),u.is_return)return u.is_return=!1,u.result}}catch(u){r.e(u)}finally{r.f()}}},{key:"FunctionDeclaration",value:function(u,e,n,t){var r=e.name,i=n.map((function(u){return u.name}));u.functions[r]=new a(r,t,i)}},{key:"ForStatement",value:function(u,e,n,t,r){for(this.evalute(u,e);this.evalute(u,n);)this.evalute(u,r),this.evalute(u,t)}},{key:"Literal",value:function(u,e){return e}},{key:"ExpressionStatement",value:function(u,e){return this.evalute(u,e)}},{key:"BlockStatement",value:function(u,e){return this.Program(u,e)}},{key:"FunctionBody",value:function(u,e){return this.Program(u,e)}},{key:"EmptyStatement",value:function(u){}},{key:"ReturnStatement",value:function(u,e){u.result=this.evalute(u,e),u.is_return=!0}},{key:"IfStatement",value:function(u,e,n,t){this.evalute(u,e)?this.evalute(u,n):t&&this.evalute(u,t)}},{key:"WhileStatement",value:function(u,e,n){for(;this.evalute(u,e);)this.evalute(u,n)}},{key:"VariableDeclaration",value:function(u,n,t){var r,a=e(n);try{for(a.s();!(r=a.n()).done;){var i=r.value;this.evalute(u,i)}}catch(u){a.e(u)}finally{a.f()}}},{key:"VariableDeclarator",value:function(u,e,n){this.Assign(u,"=",e,this.evalute(u,n))}},{key:"ArrayExpression",value:function(u,e){var n=this;e.map((function(e){return n.evalute(u,e)}))}},{key:"UnaryExpression",value:function(u,e,n,t){switch(e){case"+":return this.evalute(u,n);case"-":return-1*this.evalute(u,n);case"!":return!this.evalute(u,n);default:this.evalute(u,n)}}},{key:"UpdateExpression",value:function(u,e,n,t){switch(e){case"++":if("Identifier"===n.type)return u.values[n.name]++;case"--":if("Identifier"===n.type)return u.values[n.name]--;default:this.evalute(u,n)}}},{key:"CallExpression",value:function(u,n,t){var r=this,a=s(u.functions,n.name,this.THRESHOLD),i=t.map((function(e){return"Identifier"===e.type?u.values[e.name]:r.evalute(u,e)}));if("p"!==a){var o=u.functions[a];if(o){var A,l=Object.assign({},u),c=0,E=e(o.args);try{for(E.s();!(A=E.n()).done;){var p=A.value;l.values[p]=i[c],c++}}catch(u){E.e(u)}finally{E.f()}return this.evalute(l,o.body),l.result}}else i.forEach((function(e){u.print(e)}))}},{key:"BinaryExpression",value:function(u,e,n,t){var r=e,a=this.evalute(u,n),i=this.evalute(u,t);switch(r){case"==":return a==i;case"!=":return a!=i;case"===":return a===i;case"!==":return a!==i;case"<":return a<i;case"<=":return a<=i;case">":return a>i;case">=":return a>=i;case"<<":return a<<i;case">>":case">>":return a>>i;case">>>":return a>>>i;case"+":return a+i;case"-":return a-i;case"*":return a*i;case"/":return a/i;case"%":return a%i;case"|":return a|i;case"^":return a^i;case"&":return a&i;case"in":return a in i;case"instanceof":return a instanceof i}}},{key:"AssignmentExpression",value:function(u,e,n,t){return this.Assign(u,this.evalute(u,e),n,this.evalute(u,t))}},{key:"LogicalExpression",value:function(u,e,n,t){var r=this.evalute(u,e),a=this.evalute(u,n),i=this.evalute(u,t);switch(r){case"||":return a||i;case"&&":return a&&i}}},{key:"MemberExpression",value:function(u,e,n,t){return this.evalute(u,e)[this.evalute(u,n)]}},{key:"ConditionalExpression",value:function(u,e,n,t){return this.IfStatement(u,e,n,t)}},{key:"evalute",value:function(u,e){if(null==e||null==e.type)return e;switch(e.type){case"Identifier":return this.Identifier(u,e.name);case"Program":return this.Program(u,e.body);case"FunctionDeclaration":return this.FunctionDeclaration(u,e.id,e.params,e.body);case"ForStatement":return this.ForStatement(u,e.init,e.test,e.update,e.body);case"Literal":return this.Literal(u,e.value);case"ExpressionStatement":return this.ExpressionStatement(u,e.expression);case"BlockStatement":return this.BlockStatement(u,e.body);case"FunctionBody":return this.FunctionBody(u,e.body);case"EmptyStatement":return this.EmptyStatement(u);case"ReturnStatement":return this.ReturnStatement(u,e.argument);case"IfStatement":case"ConditionalExpression":return this.IfStatement(u,e.test,e.consequent,e.alternate);case"WhileStatement":return this.WhileStatement(u,e.test,e.body);case"VariableDeclaration":return this.VariableDeclaration(u,e.declarations,e.kind);case"VariableDeclarator":return this.VariableDeclarator(u,e.id,e.init);case"ArrayExpression":return this.ArrayExpression(u,e.elements);case"UnaryExpression":return this.UnaryExpression(u,e.operator,e.argument,e.prefix);case"UpdateExpression":return this.UpdateExpression(u,e.operator,e.argument,e.prefix);case"CallExpression":return this.CallExpression(u,e.callee,e.arguments);case"BinaryExpression":return this.BinaryExpression(u,e.operator,e.left,e.right);case"AssignmentExpression":return this.AssignmentExpression(u,e.operator,e.left,e.right);case"LogicalExpression":return this.LogicalExpression(u,e.operator,e.left,e.right);case"MemberExpression":return this.MemberExpression(u,e.object,e.property,e.computed);default:console.log(e)}}}])&&t(n.prototype,i),u}();function l(){var e=document.querySelector("#code"),n=document.querySelector("#result"),t="";!function(e,r){var a=u.generate('\n{{\n    var TYPES_TO_PROPERTY_NAMES = {\n      CallExpression:   "callee",\n      MemberExpression: "object",\n    };\n  \n    function filledArray(count, value) {\n      return Array.apply(null, new Array(count))\n        .map(function() { return value; });\n    }\n  \n    function extractOptional(optional, index) {\n      return optional ? optional[index] : null;\n    }\n  \n    function extractList(list, index) {\n      return list.map(function(element) { return element[index]; });\n    }\n  \n    function buildList(head, tail, index) {\n      return [head].concat(extractList(tail, index));\n    }\n  \n    function buildBinaryExpression(head, tail) {\n      return tail.reduce(function(result, element) {\n        return {\n          type: "BinaryExpression",\n          operator: element[1],\n          left: result,\n          right: element[3]\n        };\n      }, head);\n    }\n  \n    function buildLogicalExpression(head, tail) {\n      return tail.reduce(function(result, element) {\n        return {\n          type: "LogicalExpression",\n          operator: element[1],\n          left: result,\n          right: element[3]\n        };\n      }, head);\n    }\n  \n    function optionalList(value) {\n      return value !== null ? value : [];\n    }\n  }}\n  \n  Start\n    = __ program:Program __ { return program; }\n  \n  // ----- A.1 Lexical Grammar -----\n  \n  SourceCharacter\n    = .\n  \n  WhiteSpace "whitespace"\n    = "\\t"\n    / "\\v"\n    / "\\f"\n    / " "\n    / "\\u00A0"\n    / "\\uFEFF"\n    / Zs\n  \n  LineTerminator\n    = [\\n\\r\\u2028\\u2029]\n  \n  LineTerminatorSequence "end of line"\n    = "\\n"\n    / "\\r\\n"\n    / "\\r"\n    / "\\u2028"\n    / "\\u2029"\n  \n  Comment "comment"\n    = MultiLineComment\n    / SingleLineComment\n  \n  MultiLineComment\n    = "/*" (!"*/" SourceCharacter)* "*/"\n  \n  MultiLineCommentNoLineTerminator\n    = "/*" (!("*/" / LineTerminator) SourceCharacter)* "*/"\n  \n  SingleLineComment\n    = "//" (!LineTerminator SourceCharacter)*\n  \n  Identifier\n    = !ReservedWord name:IdentifierName { return name; }\n  \n  IdentifierName "identifier"\n    = head:IdentifierStart tail:IdentifierPart* {\n        return {\n          type: "Identifier",\n          name: head + tail.join("")\n        };\n      }\n  \n  IdentifierStart\n    = UnicodeLetter\n    / "$"\n    / "_"\n    / "\\\\" sequence:UnicodeEscapeSequence { return sequence; }\n  \n  IdentifierPart\n    = IdentifierStart\n    / UnicodeCombiningMark\n    / UnicodeDigit\n    / UnicodeConnectorPunctuation\n    / "\\u200C"\n    / "\\u200D"\n  \n  UnicodeLetter\n    = Lu\n    / Ll\n    / Lt\n    / Lm\n    / Lo\n    / Nl\n  \n  UnicodeCombiningMark\n    = Mn\n    / Mc\n  \n  UnicodeDigit\n    = Nd\n  \n  UnicodeConnectorPunctuation\n    = Pc\n  \n  ReservedWord\n    = Keyword\n    / FutureReservedWord\n    / NullLiteral\n    / BooleanLiteral\n  \n  Keyword\n    = BreakToken\n    / CaseToken\n    / CatchToken\n    / ContinueToken\n    / DebuggerToken\n    / DefaultToken\n    / DeleteToken\n    / DoToken\n    / ElseToken\n    / FinallyToken\n    / ForToken\n    / FunctionToken\n    / IfToken\n    / InstanceofToken\n    / InToken\n    / NewToken\n    / ReturnToken\n    / SwitchToken\n    / ThisToken\n    / ThrowToken\n    / TryToken\n    / TypeofToken\n    / VarToken\n    / VoidToken\n    / WhileToken\n    / WithToken\n  \n  FutureReservedWord\n    = ClassToken\n    / ConstToken\n    / EnumToken\n    / ExportToken\n    / ExtendsToken\n    / ImportToken\n    / SuperToken\n  \n  Literal\n    = NullLiteral\n    / BooleanLiteral\n    / NumericLiteral\n    / StringLiteral\n    / RegularExpressionLiteral\n  \n  NullLiteral\n    = NullToken { return { type: "Literal", value: null }; }\n  \n  BooleanLiteral\n    = TrueToken  { return { type: "Literal", value: true  }; }\n    / FalseToken { return { type: "Literal", value: false }; }\n  \n  // The "!(IdentifierStart / DecimalDigit)" predicate is not part of the official\n  // grammar, it comes from text in section 7.8.3.\n  NumericLiteral "number"\n    = literal:HexIntegerLiteral !(IdentifierStart / DecimalDigit) {\n        return literal;\n      }\n    / literal:DecimalLiteral !(IdentifierStart / DecimalDigit) {\n        return literal;\n      }\n  \n  DecimalLiteral\n    = DecimalIntegerLiteral "." DecimalDigit* ExponentPart? {\n        return { type: "Literal", value: parseFloat(text()) };\n      }\n    / "." DecimalDigit+ ExponentPart? {\n        return { type: "Literal", value: parseFloat(text()) };\n      }\n    / DecimalIntegerLiteral ExponentPart? {\n        return { type: "Literal", value: parseFloat(text()) };\n      }\n  \n  DecimalIntegerLiteral\n    = "0"\n    / NonZeroDigit DecimalDigit*\n  \n  DecimalDigit\n    = [0-9]\n  \n  NonZeroDigit\n    = [1-9]\n  \n  ExponentPart\n    = ExponentIndicator SignedInteger\n  \n  ExponentIndicator\n    = "e"i\n  \n  SignedInteger\n    = [+-]? DecimalDigit+\n  \n  HexIntegerLiteral\n    = "0x"i digits:$HexDigit+ {\n        return { type: "Literal", value: parseInt(digits, 16) };\n       }\n  \n  HexDigit\n    = [0-9a-f]i\n  \n  StringLiteral "string"\n    = \'"\' chars:DoubleStringCharacter* \'"\' {\n        return { type: "Literal", value: chars.join("") };\n      }\n    / "\'" chars:SingleStringCharacter* "\'" {\n        return { type: "Literal", value: chars.join("") };\n      }\n  \n  DoubleStringCharacter\n    = !(\'"\' / "\\\\" / LineTerminator) SourceCharacter { return text(); }\n    / "\\\\" sequence:EscapeSequence { return sequence; }\n    / LineContinuation\n  \n  SingleStringCharacter\n    = !("\'" / "\\\\" / LineTerminator) SourceCharacter { return text(); }\n    / "\\\\" sequence:EscapeSequence { return sequence; }\n    / LineContinuation\n  \n  LineContinuation\n    = "\\\\" LineTerminatorSequence { return ""; }\n  \n  EscapeSequence\n    = CharacterEscapeSequence\n    / "0" !DecimalDigit { return "\\0"; }\n    / HexEscapeSequence\n    / UnicodeEscapeSequence\n  \n  CharacterEscapeSequence\n    = SingleEscapeCharacter\n    / NonEscapeCharacter\n  \n  SingleEscapeCharacter\n    = "\'"\n    / \'"\'\n    / "\\\\"\n    / "b"  { return "\\b"; }\n    / "f"  { return "\\f"; }\n    / "n"  { return "\\n"; }\n    / "r"  { return "\\r"; }\n    / "t"  { return "\\t"; }\n    / "v"  { return "\\v"; }\n  \n  NonEscapeCharacter\n    = !(EscapeCharacter / LineTerminator) SourceCharacter { return text(); }\n  \n  EscapeCharacter\n    = SingleEscapeCharacter\n    / DecimalDigit\n    / "x"\n    / "u"\n  \n  HexEscapeSequence\n    = "x" digits:$(HexDigit HexDigit) {\n        return String.fromCharCode(parseInt(digits, 16));\n      }\n  \n  UnicodeEscapeSequence\n    = "u" digits:$(HexDigit HexDigit HexDigit HexDigit) {\n        return String.fromCharCode(parseInt(digits, 16));\n      }\n  \n  RegularExpressionLiteral "regular expression"\n    = "/" pattern:$RegularExpressionBody "/" flags:$RegularExpressionFlags {\n        var value;\n  \n        try {\n          value = new RegExp(pattern, flags);\n        } catch (e) {\n          error(e.message);\n        }\n  \n        return { type: "Literal", value: value };\n      }\n  \n  RegularExpressionBody\n    = RegularExpressionFirstChar RegularExpressionChar*\n  \n  RegularExpressionFirstChar\n    = ![*\\\\/[] RegularExpressionNonTerminator\n    / RegularExpressionBackslashSequence\n    / RegularExpressionClass\n  \n  RegularExpressionChar\n    = ![\\\\/[] RegularExpressionNonTerminator\n    / RegularExpressionBackslashSequence\n    / RegularExpressionClass\n  \n  RegularExpressionBackslashSequence\n    = "\\\\" RegularExpressionNonTerminator\n  \n  RegularExpressionNonTerminator\n    = !LineTerminator SourceCharacter\n  \n  RegularExpressionClass\n    = "[" RegularExpressionClassChar* "]"\n  \n  RegularExpressionClassChar\n    = ![\\]\\\\] RegularExpressionNonTerminator\n    / RegularExpressionBackslashSequence\n  \n  RegularExpressionFlags\n    = IdentifierPart*\n  \n  // Unicode Character Categories\n  //\n  // Extracted from the following Unicode Character Database file:\n  //\n  //   http://www.unicode.org/Public/8.0.0/ucd/extracted/DerivedGeneralCategory.txt\n  //\n  // Unix magic used:\n  //\n  //   grep "; $CATEGORY" DerivedGeneralCategory.txt |   # Filter characters\n  //     cut -f1 -d " " |                                # Extract code points\n  //     grep -v \'[0-9a-fA-F]\\{5\\}\' |                    # Exclude non-BMP characters\n  //     sed -e \'s/\\.\\./-/\' |                            # Adjust formatting\n  //     sed -e \'s/\\([0-9a-fA-F]\\{4\\}\\)/\\\\u\\1/g\' |       # Adjust formatting\n  //     tr -d \'\\n\'                                      # Join lines\n  //\n  // ECMA-262 allows using Unicode 3.0 or later, version 8.0.0 was the latest one\n  // at the time of writing.\n  //\n  // Non-BMP characters are completely ignored to avoid surrogate pair handling\n  // (detecting surrogate pairs isn\'t possible with a simple character class and\n  // other methods would degrade performance). I don\'t consider it a big deal as\n  // even parsers in JavaScript engines of common browsers seem to ignore them.\n  \n  // Letter, Lowercase\n  Ll = [\\u0061-\\u007A\\u00B5\\u00DF-\\u00F6\\u00F8-\\u00FF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137-\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148-\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C-\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA-\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9-\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC-\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF-\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F-\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0-\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB-\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE-\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6-\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FC7\\u1FD0-\\u1FD3\\u1FD6-\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6-\\u1FF7\\u210A\\u210E-\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C-\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65-\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73-\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3-\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A]\n  \n  // Letter, Modifier\n  Lm = [\\u02B0-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0374\\u037A\\u0559\\u0640\\u06E5-\\u06E6\\u07F4-\\u07F5\\u07FA\\u081A\\u0824\\u0828\\u0971\\u0E46\\u0EC6\\u10FC\\u17D7\\u1843\\u1AA7\\u1C78-\\u1C7D\\u1D2C-\\u1D6A\\u1D78\\u1D9B-\\u1DBF\\u2071\\u207F\\u2090-\\u209C\\u2C7C-\\u2C7D\\u2D6F\\u2E2F\\u3005\\u3031-\\u3035\\u303B\\u309D-\\u309E\\u30FC-\\u30FE\\uA015\\uA4F8-\\uA4FD\\uA60C\\uA67F\\uA69C-\\uA69D\\uA717-\\uA71F\\uA770\\uA788\\uA7F8-\\uA7F9\\uA9CF\\uA9E6\\uAA70\\uAADD\\uAAF3-\\uAAF4\\uAB5C-\\uAB5F\\uFF70\\uFF9E-\\uFF9F]\n  \n  // Letter, Other\n  Lo = [\\u00AA\\u00BA\\u01BB\\u01C0-\\u01C3\\u0294\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u063F\\u0641-\\u064A\\u066E-\\u066F\\u0671-\\u06D3\\u06D5\\u06EE-\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u0800-\\u0815\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0972-\\u0980\\u0985-\\u098C\\u098F-\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC-\\u09DD\\u09DF-\\u09E1\\u09F0-\\u09F1\\u0A05-\\u0A0A\\u0A0F-\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32-\\u0A33\\u0A35-\\u0A36\\u0A38-\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2-\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0-\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F-\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32-\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C-\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99-\\u0B9A\\u0B9C\\u0B9E-\\u0B9F\\u0BA3-\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60-\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0-\\u0CE1\\u0CF1-\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32-\\u0E33\\u0E40-\\u0E45\\u0E81-\\u0E82\\u0E84\\u0E87-\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA-\\u0EAB\\u0EAD-\\u0EB0\\u0EB2-\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065-\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10D0-\\u10FA\\u10FD-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17DC\\u1820-\\u1842\\u1844-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE-\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C77\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5-\\u1CF6\\u2135-\\u2138\\u2D30-\\u2D67\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3006\\u303C\\u3041-\\u3096\\u309F\\u30A1-\\u30FA\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA014\\uA016-\\uA48C\\uA4D0-\\uA4F7\\uA500-\\uA60B\\uA610-\\uA61F\\uA62A-\\uA62B\\uA66E\\uA6A0-\\uA6E5\\uA78F\\uA7F7\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9E0-\\uA9E4\\uA9E7-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA6F\\uAA71-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5-\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADC\\uAAE0-\\uAAEA\\uAAF2\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40-\\uFB41\\uFB43-\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF66-\\uFF6F\\uFF71-\\uFF9D\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]\n  \n  // Letter, Titlecase\n  Lt = [\\u01C5\\u01C8\\u01CB\\u01F2\\u1F88-\\u1F8F\\u1F98-\\u1F9F\\u1FA8-\\u1FAF\\u1FBC\\u1FCC\\u1FFC]\n  \n  // Letter, Uppercase\n  Lu = [\\u0041-\\u005A\\u00C0-\\u00D6\\u00D8-\\u00DE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178-\\u0179\\u017B\\u017D\\u0181-\\u0182\\u0184\\u0186-\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193-\\u0194\\u0196-\\u0198\\u019C-\\u019D\\u019F-\\u01A0\\u01A2\\u01A4\\u01A6-\\u01A7\\u01A9\\u01AC\\u01AE-\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7-\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A-\\u023B\\u023D-\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9-\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0-\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E-\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D-\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AD\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A]\n  \n  // Mark, Spacing Combining\n  Mc = [\\u0903\\u093B\\u093E-\\u0940\\u0949-\\u094C\\u094E-\\u094F\\u0982-\\u0983\\u09BE-\\u09C0\\u09C7-\\u09C8\\u09CB-\\u09CC\\u09D7\\u0A03\\u0A3E-\\u0A40\\u0A83\\u0ABE-\\u0AC0\\u0AC9\\u0ACB-\\u0ACC\\u0B02-\\u0B03\\u0B3E\\u0B40\\u0B47-\\u0B48\\u0B4B-\\u0B4C\\u0B57\\u0BBE-\\u0BBF\\u0BC1-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD7\\u0C01-\\u0C03\\u0C41-\\u0C44\\u0C82-\\u0C83\\u0CBE\\u0CC0-\\u0CC4\\u0CC7-\\u0CC8\\u0CCA-\\u0CCB\\u0CD5-\\u0CD6\\u0D02-\\u0D03\\u0D3E-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D57\\u0D82-\\u0D83\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DF2-\\u0DF3\\u0F3E-\\u0F3F\\u0F7F\\u102B-\\u102C\\u1031\\u1038\\u103B-\\u103C\\u1056-\\u1057\\u1062-\\u1064\\u1067-\\u106D\\u1083-\\u1084\\u1087-\\u108C\\u108F\\u109A-\\u109C\\u17B6\\u17BE-\\u17C5\\u17C7-\\u17C8\\u1923-\\u1926\\u1929-\\u192B\\u1930-\\u1931\\u1933-\\u1938\\u1A19-\\u1A1A\\u1A55\\u1A57\\u1A61\\u1A63-\\u1A64\\u1A6D-\\u1A72\\u1B04\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43-\\u1B44\\u1B82\\u1BA1\\u1BA6-\\u1BA7\\u1BAA\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2-\\u1BF3\\u1C24-\\u1C2B\\u1C34-\\u1C35\\u1CE1\\u1CF2-\\u1CF3\\u302E-\\u302F\\uA823-\\uA824\\uA827\\uA880-\\uA881\\uA8B4-\\uA8C3\\uA952-\\uA953\\uA983\\uA9B4-\\uA9B5\\uA9BA-\\uA9BB\\uA9BD-\\uA9C0\\uAA2F-\\uAA30\\uAA33-\\uAA34\\uAA4D\\uAA7B\\uAA7D\\uAAEB\\uAAEE-\\uAAEF\\uAAF5\\uABE3-\\uABE4\\uABE6-\\uABE7\\uABE9-\\uABEA\\uABEC]\n  \n  // Mark, Nonspacing\n  Mn = [\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1-\\u05C2\\u05C4-\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7-\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962-\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2-\\u09E3\\u0A01-\\u0A02\\u0A3C\\u0A41-\\u0A42\\u0A47-\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70-\\u0A71\\u0A75\\u0A81-\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7-\\u0AC8\\u0ACD\\u0AE2-\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62-\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55-\\u0C56\\u0C62-\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC-\\u0CCD\\u0CE2-\\u0CE3\\u0D01\\u0D41-\\u0D44\\u0D4D\\u0D62-\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB-\\u0EBC\\u0EC8-\\u0ECD\\u0F18-\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86-\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039-\\u103A\\u103D-\\u103E\\u1058-\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085-\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752-\\u1753\\u1772-\\u1773\\u17B4-\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u1922\\u1927-\\u1928\\u1932\\u1939-\\u193B\\u1A17-\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABD\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80-\\u1B81\\u1BA2-\\u1BA5\\u1BA8-\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8-\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8-\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099-\\u309A\\uA66F\\uA674-\\uA67D\\uA69E-\\uA69F\\uA6F0-\\uA6F1\\uA802\\uA806\\uA80B\\uA825-\\uA826\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9E5\\uAA29-\\uAA2E\\uAA31-\\uAA32\\uAA35-\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7-\\uAAB8\\uAABE-\\uAABF\\uAAC1\\uAAEC-\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F]\n  \n  // Number, Decimal Digit\n  Nd = [\\u0030-\\u0039\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19]\n  \n  // Number, Letter\n  Nl = [\\u16EE-\\u16F0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303A\\uA6E6-\\uA6EF]\n  \n  // Punctuation, Connector\n  Pc = [\\u005F\\u203F-\\u2040\\u2054\\uFE33-\\uFE34\\uFE4D-\\uFE4F\\uFF3F]\n  \n  // Separator, Space\n  Zs = [\\u0020\\u00A0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]\n  \n  // Tokens\n  \n  BreakToken      = "break"      !IdentifierPart\n  CaseToken       = "case"       !IdentifierPart\n  CatchToken      = "catch"      !IdentifierPart\n  ClassToken      = "class"      !IdentifierPart\n  ConstToken      = "const"      !IdentifierPart\n  ContinueToken   = "continue"   !IdentifierPart\n  DebuggerToken   = "debugger"   !IdentifierPart\n  DefaultToken    = "default"    !IdentifierPart\n  DeleteToken     = "delete"     !IdentifierPart\n  DoToken         = "do"         !IdentifierPart\n  ElseToken       = "else"       !IdentifierPart\n  EnumToken       = "enum"       !IdentifierPart\n  ExportToken     = "export"     !IdentifierPart\n  ExtendsToken    = "extends"    !IdentifierPart\n  FalseToken      = "false"      !IdentifierPart\n  FinallyToken    = "finally"    !IdentifierPart\n  ForToken        = "for"        !IdentifierPart\n  FunctionToken   = "function"   !IdentifierPart\n  GetToken        = "get"        !IdentifierPart\n  IfToken         = "if"         !IdentifierPart\n  ImportToken     = "import"     !IdentifierPart\n  InstanceofToken = "instanceof" !IdentifierPart\n  InToken         = "in"         !IdentifierPart\n  NewToken        = "new"        !IdentifierPart\n  NullToken       = "null"       !IdentifierPart\n  ReturnToken     = "return"     !IdentifierPart\n  SetToken        = "set"        !IdentifierPart\n  SuperToken      = "super"      !IdentifierPart\n  SwitchToken     = "switch"     !IdentifierPart\n  ThisToken       = "this"       !IdentifierPart\n  ThrowToken      = "throw"      !IdentifierPart\n  TrueToken       = "true"       !IdentifierPart\n  TryToken        = "try"        !IdentifierPart\n  TypeofToken     = "typeof"     !IdentifierPart\n  VarToken        = "var"        !IdentifierPart\n  VoidToken       = "void"       !IdentifierPart\n  WhileToken      = "while"      !IdentifierPart\n  WithToken       = "with"       !IdentifierPart\n  \n  // Skipped\n  \n  __\n    = (WhiteSpace / LineTerminatorSequence / Comment)*\n  \n  _\n    = (WhiteSpace / MultiLineCommentNoLineTerminator)*\n  \n  // Automatic Semicolon Insertion\n  \n  EOS\n    = __ ";"\n    / _ SingleLineComment? LineTerminatorSequence\n    / _ &"}"\n    / __ EOF\n  \n  EOF\n    = !.\n  \n  // ----- A.2 Number Conversions -----\n  \n  // Irrelevant.\n  \n  // ----- A.3 Expressions -----\n  \n  PrimaryExpression\n    = ThisToken { return { type: "ThisExpression" }; }\n    / Identifier\n    / Literal\n    / ArrayLiteral\n    / ObjectLiteral\n    / "(" __ expression:Expression __ ")" { return expression; }\n  \n  ArrayLiteral\n    = "[" __ elision:(Elision __)? "]" {\n        return {\n          type: "ArrayExpression",\n          elements: optionalList(extractOptional(elision, 0))\n        };\n      }\n    / "[" __ elements:ElementList __ "]" {\n        return {\n          type: "ArrayExpression",\n          elements: elements\n        };\n      }\n    / "[" __ elements:ElementList __ "," __ elision:(Elision __)? "]" {\n        return {\n          type: "ArrayExpression",\n          elements: elements.concat(optionalList(extractOptional(elision, 0)))\n        };\n      }\n  \n  ElementList\n    = head:(\n        elision:(Elision __)? element:AssignmentExpression {\n          return optionalList(extractOptional(elision, 0)).concat(element);\n        }\n      )\n      tail:(\n        __ "," __ elision:(Elision __)? element:AssignmentExpression {\n          return optionalList(extractOptional(elision, 0)).concat(element);\n        }\n      )*\n      { return Array.prototype.concat.apply(head, tail); }\n  \n  Elision\n    = "," commas:(__ ",")* { return filledArray(commas.length + 1, null); }\n  \n  ObjectLiteral\n    = "{" __ "}" { return { type: "ObjectExpression", properties: [] }; }\n    / "{" __ properties:PropertyNameAndValueList __ "}" {\n         return { type: "ObjectExpression", properties: properties };\n       }\n    / "{" __ properties:PropertyNameAndValueList __ "," __ "}" {\n         return { type: "ObjectExpression", properties: properties };\n       }\n  PropertyNameAndValueList\n    = head:PropertyAssignment tail:(__ "," __ PropertyAssignment)* {\n        return buildList(head, tail, 3);\n      }\n  \n  PropertyAssignment\n    = key:PropertyName __ ":" __ value:AssignmentExpression {\n        return { type: "Property", key: key, value: value, kind: "init" };\n      }\n    / GetToken __ key:PropertyName __\n      "(" __ ")" __\n      "{" __ body:FunctionBody __ "}"\n      {\n        return {\n          type: "Property",\n          key: key,\n          value: {\n            type: "FunctionExpression",\n            id: null,\n            params: [],\n            body: body\n          },\n          kind: "get"\n        };\n      }\n    / SetToken __ key:PropertyName __\n      "(" __ params:PropertySetParameterList __ ")" __\n      "{" __ body:FunctionBody __ "}"\n      {\n        return {\n          type: "Property",\n          key: key,\n          value: {\n            type: "FunctionExpression",\n            id: null,\n            params: params,\n            body: body\n          },\n          kind: "set"\n        };\n      }\n  \n  PropertyName\n    = IdentifierName\n    / StringLiteral\n    / NumericLiteral\n  \n  PropertySetParameterList\n    = id:Identifier { return [id]; }\n  \n  MemberExpression\n    = head:(\n          PrimaryExpression\n        / FunctionExpression\n        / NewToken __ callee:MemberExpression __ args:Arguments {\n            return { type: "NewExpression", callee: callee, arguments: args };\n          }\n      )\n      tail:(\n          __ "[" __ property:Expression __ "]" {\n            return { property: property, computed: true };\n          }\n        / __ "." __ property:IdentifierName {\n            return { property: property, computed: false };\n          }\n      )*\n      {\n        return tail.reduce(function(result, element) {\n          return {\n            type: "MemberExpression",\n            object: result,\n            property: element.property,\n            computed: element.computed\n          };\n        }, head);\n      }\n  \n  NewExpression\n    = MemberExpression\n    / NewToken __ callee:NewExpression {\n        return { type: "NewExpression", callee: callee, arguments: [] };\n      }\n  \n  CallExpression\n    = head:(\n        callee:MemberExpression __ args:Arguments {\n          return { type: "CallExpression", callee: callee, arguments: args };\n        }\n      )\n      tail:(\n          __ args:Arguments {\n            return { type: "CallExpression", arguments: args };\n          }\n        / __ "[" __ property:Expression __ "]" {\n            return {\n              type: "MemberExpression",\n              property: property,\n              computed: true\n            };\n          }\n        / __ "." __ property:IdentifierName {\n            return {\n              type: "MemberExpression",\n              property: property,\n              computed: false\n            };\n          }\n      )*\n      {\n        return tail.reduce(function(result, element) {\n          element[TYPES_TO_PROPERTY_NAMES[element.type]] = result;\n  \n          return element;\n        }, head);\n      }\n  \n  Arguments\n    = "(" __ args:(ArgumentList __)? ")" {\n        return optionalList(extractOptional(args, 0));\n      }\n  \n  ArgumentList\n    = head:AssignmentExpression tail:(__ "," __ AssignmentExpression)* {\n        return buildList(head, tail, 3);\n      }\n  \n  LeftHandSideExpression\n    = CallExpression\n    / NewExpression\n  \n  PostfixExpression\n    = argument:LeftHandSideExpression _ operator:PostfixOperator {\n        return {\n          type: "UpdateExpression",\n          operator: operator,\n          argument: argument,\n          prefix: false\n        };\n      }\n    / LeftHandSideExpression\n  \n  PostfixOperator\n    = "++"\n    / "--"\n  \n  UnaryExpression\n    = PostfixExpression\n    / operator:UnaryOperator __ argument:UnaryExpression {\n        var type = (operator === "++" || operator === "--")\n          ? "UpdateExpression"\n          : "UnaryExpression";\n  \n        return {\n          type: type,\n          operator: operator,\n          argument: argument,\n          prefix: true\n        };\n      }\n  \n  UnaryOperator\n    = $DeleteToken\n    / $VoidToken\n    / $TypeofToken\n    / "++"\n    / "--"\n    / $("+" !"=")\n    / $("-" !"=")\n    / "~"\n    / "!"\n  \n  MultiplicativeExpression\n    = head:UnaryExpression\n      tail:(__ MultiplicativeOperator __ UnaryExpression)*\n      { return buildBinaryExpression(head, tail); }\n  \n  MultiplicativeOperator\n    = $("*" !"=")\n    / $("/" !"=")\n    / $("%" !"=")\n  \n  AdditiveExpression\n    = head:MultiplicativeExpression\n      tail:(__ AdditiveOperator __ MultiplicativeExpression)*\n      { return buildBinaryExpression(head, tail); }\n  \n  AdditiveOperator\n    = $("+" ![+=])\n    / $("-" ![-=])\n  \n  ShiftExpression\n    = head:AdditiveExpression\n      tail:(__ ShiftOperator __ AdditiveExpression)*\n      { return buildBinaryExpression(head, tail); }\n  \n  ShiftOperator\n    = $("<<"  !"=")\n    / $(">>>" !"=")\n    / $(">>"  !"=")\n  \n  RelationalExpression\n    = head:ShiftExpression\n      tail:(__ RelationalOperator __ ShiftExpression)*\n      { return buildBinaryExpression(head, tail); }\n  \n  RelationalOperator\n    = "<="\n    / ">="\n    / $("<" !"<")\n    / $(">" !">")\n    / $InstanceofToken\n    / $InToken\n  \n  RelationalExpressionNoIn\n    = head:ShiftExpression\n      tail:(__ RelationalOperatorNoIn __ ShiftExpression)*\n      { return buildBinaryExpression(head, tail); }\n  \n  RelationalOperatorNoIn\n    = "<="\n    / ">="\n    / $("<" !"<")\n    / $(">" !">")\n    / $InstanceofToken\n  \n  EqualityExpression\n    = head:RelationalExpression\n      tail:(__ EqualityOperator __ RelationalExpression)*\n      { return buildBinaryExpression(head, tail); }\n  \n  EqualityExpressionNoIn\n    = head:RelationalExpressionNoIn\n      tail:(__ EqualityOperator __ RelationalExpressionNoIn)*\n      { return buildBinaryExpression(head, tail); }\n  \n  EqualityOperator\n    = "==="\n    / "!=="\n    / "=="\n    / "!="\n  \n  BitwiseANDExpression\n    = head:EqualityExpression\n      tail:(__ BitwiseANDOperator __ EqualityExpression)*\n      { return buildBinaryExpression(head, tail); }\n  \n  BitwiseANDExpressionNoIn\n    = head:EqualityExpressionNoIn\n      tail:(__ BitwiseANDOperator __ EqualityExpressionNoIn)*\n      { return buildBinaryExpression(head, tail); }\n  \n  BitwiseANDOperator\n    = $("&" ![&=])\n  \n  BitwiseXORExpression\n    = head:BitwiseANDExpression\n      tail:(__ BitwiseXOROperator __ BitwiseANDExpression)*\n      { return buildBinaryExpression(head, tail); }\n  \n  BitwiseXORExpressionNoIn\n    = head:BitwiseANDExpressionNoIn\n      tail:(__ BitwiseXOROperator __ BitwiseANDExpressionNoIn)*\n      { return buildBinaryExpression(head, tail); }\n  \n  BitwiseXOROperator\n    = $("^" !"=")\n  \n  BitwiseORExpression\n    = head:BitwiseXORExpression\n      tail:(__ BitwiseOROperator __ BitwiseXORExpression)*\n      { return buildBinaryExpression(head, tail); }\n  \n  BitwiseORExpressionNoIn\n    = head:BitwiseXORExpressionNoIn\n      tail:(__ BitwiseOROperator __ BitwiseXORExpressionNoIn)*\n      { return buildBinaryExpression(head, tail); }\n  \n  BitwiseOROperator\n    = $("|" ![|=])\n  \n  LogicalANDExpression\n    = head:BitwiseORExpression\n      tail:(__ LogicalANDOperator __ BitwiseORExpression)*\n      { return buildLogicalExpression(head, tail); }\n  \n  LogicalANDExpressionNoIn\n    = head:BitwiseORExpressionNoIn\n      tail:(__ LogicalANDOperator __ BitwiseORExpressionNoIn)*\n      { return buildLogicalExpression(head, tail); }\n  \n  LogicalANDOperator\n    = "&&"\n  \n  LogicalORExpression\n    = head:LogicalANDExpression\n      tail:(__ LogicalOROperator __ LogicalANDExpression)*\n      { return buildLogicalExpression(head, tail); }\n  \n  LogicalORExpressionNoIn\n    = head:LogicalANDExpressionNoIn\n      tail:(__ LogicalOROperator __ LogicalANDExpressionNoIn)*\n      { return buildLogicalExpression(head, tail); }\n  \n  LogicalOROperator\n    = "||"\n  \n  ConditionalExpression\n    = test:LogicalORExpression __\n      "?" __ consequent:AssignmentExpression __\n      ":" __ alternate:AssignmentExpression\n      {\n        return {\n          type: "ConditionalExpression",\n          test: test,\n          consequent: consequent,\n          alternate: alternate\n        };\n      }\n    / LogicalORExpression\n  \n  ConditionalExpressionNoIn\n    = test:LogicalORExpressionNoIn __\n      "?" __ consequent:AssignmentExpression __\n      ":" __ alternate:AssignmentExpressionNoIn\n      {\n        return {\n          type: "ConditionalExpression",\n          test: test,\n          consequent: consequent,\n          alternate: alternate\n        };\n      }\n    / LogicalORExpressionNoIn\n  \n  AssignmentExpression\n    = left:LeftHandSideExpression __\n      "=" !"=" __\n      right:AssignmentExpression\n      {\n        return {\n          type: "AssignmentExpression",\n          operator: "=",\n          left: left,\n          right: right\n        };\n      }\n    / left:LeftHandSideExpression __\n      operator:AssignmentOperator __\n      right:AssignmentExpression\n      {\n        return {\n          type: "AssignmentExpression",\n          operator: operator,\n          left: left,\n          right: right\n        };\n      }\n    / ConditionalExpression\n  \n  AssignmentExpressionNoIn\n    = left:LeftHandSideExpression __\n      "=" !"=" __\n      right:AssignmentExpressionNoIn\n      {\n        return {\n          type: "AssignmentExpression",\n          operator: "=",\n          left: left,\n          right: right\n        };\n      }\n    / left:LeftHandSideExpression __\n      operator:AssignmentOperator __\n      right:AssignmentExpressionNoIn\n      {\n        return {\n          type: "AssignmentExpression",\n          operator: operator,\n          left: left,\n          right: right\n        };\n      }\n    / ConditionalExpressionNoIn\n  \n  AssignmentOperator\n    = "*="\n    / "/="\n    / "%="\n    / "+="\n    / "-="\n    / "<<="\n    / ">>="\n    / ">>>="\n    / "&="\n    / "^="\n    / "|="\n  \n  Expression\n    = head:AssignmentExpression tail:(__ "," __ AssignmentExpression)* {\n        return tail.length > 0\n          ? { type: "SequenceExpression", expressions: buildList(head, tail, 3) }\n          : head;\n      }\n  \n  ExpressionNoIn\n    = head:AssignmentExpressionNoIn tail:(__ "," __ AssignmentExpressionNoIn)* {\n        return tail.length > 0\n          ? { type: "SequenceExpression", expressions: buildList(head, tail, 3) }\n          : head;\n      }\n  \n  // ----- A.4 Statements -----\n  \n  Statement\n    = Block\n    / VariableStatement\n    / EmptyStatement\n    / ExpressionStatement\n    / IfStatement\n    / IterationStatement\n    / ContinueStatement\n    / BreakStatement\n    / ReturnStatement\n    / WithStatement\n    / LabelledStatement\n    / SwitchStatement\n    / ThrowStatement\n    / TryStatement\n    / DebuggerStatement\n  \n  Block\n    = "{" __ body:(StatementList __)? "}" {\n        return {\n          type: "BlockStatement",\n          body: optionalList(extractOptional(body, 0))\n        };\n      }\n  \n  StatementList\n    = head:Statement tail:(__ Statement)* { return buildList(head, tail, 1); }\n  \n  VariableStatement\n    = VarToken __ declarations:VariableDeclarationList EOS {\n        return {\n          type: "VariableDeclaration",\n          declarations: declarations,\n          kind: "var"\n        };\n      }\n  \n  VariableDeclarationList\n    = head:VariableDeclaration tail:(__ "," __ VariableDeclaration)* {\n        return buildList(head, tail, 3);\n      }\n  \n  VariableDeclarationListNoIn\n    = head:VariableDeclarationNoIn tail:(__ "," __ VariableDeclarationNoIn)* {\n        return buildList(head, tail, 3);\n      }\n  \n  VariableDeclaration\n    = id:Identifier init:(__ Initialiser)? {\n        return {\n          type: "VariableDeclarator",\n          id: id,\n          init: extractOptional(init, 1)\n        };\n      }\n  \n  VariableDeclarationNoIn\n    = id:Identifier init:(__ InitialiserNoIn)? {\n        return {\n          type: "VariableDeclarator",\n          id: id,\n          init: extractOptional(init, 1)\n        };\n      }\n  \n  Initialiser\n    = "=" !"=" __ expression:AssignmentExpression { return expression; }\n  \n  InitialiserNoIn\n    = "=" !"=" __ expression:AssignmentExpressionNoIn { return expression; }\n  \n  EmptyStatement\n    = ";" { return { type: "EmptyStatement" }; }\n  \n  ExpressionStatement\n    = !("{" / FunctionToken) expression:Expression EOS {\n        return {\n          type: "ExpressionStatement",\n          expression: expression\n        };\n      }\n  \n  IfStatement\n    = IfToken __ "(" __ test:Expression __ ")" __\n      consequent:Statement __\n      ElseToken __\n      alternate:Statement\n      {\n        return {\n          type: "IfStatement",\n          test: test,\n          consequent: consequent,\n          alternate: alternate\n        };\n      }\n    / IfToken __ "(" __ test:Expression __ ")" __\n      consequent:Statement {\n        return {\n          type: "IfStatement",\n          test: test,\n          consequent: consequent,\n          alternate: null\n        };\n      }\n  \n  IterationStatement\n    = DoToken __\n      body:Statement __\n      WhileToken __ "(" __ test:Expression __ ")" EOS\n      { return { type: "DoWhileStatement", body: body, test: test }; }\n    / WhileToken __ "(" __ test:Expression __ ")" __\n      body:Statement\n      { return { type: "WhileStatement", test: test, body: body }; }\n    / ForToken __\n      "(" __\n      init:(ExpressionNoIn __)? ";" __\n      test:(Expression __)? ";" __\n      update:(Expression __)?\n      ")" __\n      body:Statement\n      {\n        return {\n          type: "ForStatement",\n          init: extractOptional(init, 0),\n          test: extractOptional(test, 0),\n          update: extractOptional(update, 0),\n          body: body\n        };\n      }\n    / ForToken __\n      "(" __\n      VarToken __ declarations:VariableDeclarationListNoIn __ ";" __\n      test:(Expression __)? ";" __\n      update:(Expression __)?\n      ")" __\n      body:Statement\n      {\n        return {\n          type: "ForStatement",\n          init: {\n            type: "VariableDeclaration",\n            declarations: declarations,\n            kind: "var"\n          },\n          test: extractOptional(test, 0),\n          update: extractOptional(update, 0),\n          body: body\n        };\n      }\n    / ForToken __\n      "(" __\n      left:LeftHandSideExpression __\n      InToken __\n      right:Expression __\n      ")" __\n      body:Statement\n      {\n        return {\n          type: "ForInStatement",\n          left: left,\n          right: right,\n          body: body\n        };\n      }\n    / ForToken __\n      "(" __\n      VarToken __ declarations:VariableDeclarationListNoIn __\n      InToken __\n      right:Expression __\n      ")" __\n      body:Statement\n      {\n        return {\n          type: "ForInStatement",\n          left: {\n            type: "VariableDeclaration",\n            declarations: declarations,\n            kind: "var"\n          },\n          right: right,\n          body: body\n        };\n      }\n  \n  ContinueStatement\n    = ContinueToken EOS {\n        return { type: "ContinueStatement", label: null };\n      }\n    / ContinueToken _ label:Identifier EOS {\n        return { type: "ContinueStatement", label: label };\n      }\n  \n  BreakStatement\n    = BreakToken EOS {\n        return { type: "BreakStatement", label: null };\n      }\n    / BreakToken _ label:Identifier EOS {\n        return { type: "BreakStatement", label: label };\n      }\n  \n  ReturnStatement\n    = ReturnToken EOS {\n        return { type: "ReturnStatement", argument: null };\n      }\n    / ReturnToken _ argument:Expression EOS {\n        return { type: "ReturnStatement", argument: argument };\n      }\n  \n  WithStatement\n    = WithToken __ "(" __ object:Expression __ ")" __\n      body:Statement\n      { return { type: "WithStatement", object: object, body: body }; }\n  \n  SwitchStatement\n    = SwitchToken __ "(" __ discriminant:Expression __ ")" __\n      cases:CaseBlock\n      {\n        return {\n          type: "SwitchStatement",\n          discriminant: discriminant,\n          cases: cases\n        };\n      }\n  \n  CaseBlock\n    = "{" __ clauses:(CaseClauses __)? "}" {\n        return optionalList(extractOptional(clauses, 0));\n      }\n    / "{" __\n      before:(CaseClauses __)?\n      default_:DefaultClause __\n      after:(CaseClauses __)? "}"\n      {\n        return optionalList(extractOptional(before, 0))\n          .concat(default_)\n          .concat(optionalList(extractOptional(after, 0)));\n      }\n  \n  CaseClauses\n    = head:CaseClause tail:(__ CaseClause)* { return buildList(head, tail, 1); }\n  \n  CaseClause\n    = CaseToken __ test:Expression __ ":" consequent:(__ StatementList)? {\n        return {\n          type: "SwitchCase",\n          test: test,\n          consequent: optionalList(extractOptional(consequent, 1))\n        };\n      }\n  \n  DefaultClause\n    = DefaultToken __ ":" consequent:(__ StatementList)? {\n        return {\n          type: "SwitchCase",\n          test: null,\n          consequent: optionalList(extractOptional(consequent, 1))\n        };\n      }\n  \n  LabelledStatement\n    = label:Identifier __ ":" __ body:Statement {\n        return { type: "LabeledStatement", label: label, body: body };\n      }\n  \n  ThrowStatement\n    = ThrowToken _ argument:Expression EOS {\n        return { type: "ThrowStatement", argument: argument };\n      }\n  \n  TryStatement\n    = TryToken __ block:Block __ handler:Catch __ finalizer:Finally {\n        return {\n          type: "TryStatement",\n          block: block,\n          handler: handler,\n          finalizer: finalizer\n        };\n      }\n    / TryToken __ block:Block __ handler:Catch {\n        return {\n          type: "TryStatement",\n          block: block,\n          handler: handler,\n          finalizer: null\n        };\n      }\n    / TryToken __ block:Block __ finalizer:Finally {\n        return {\n          type: "TryStatement",\n          block: block,\n          handler: null,\n          finalizer: finalizer\n        };\n      }\n  \n  Catch\n    = CatchToken __ "(" __ param:Identifier __ ")" __ body:Block {\n        return {\n          type: "CatchClause",\n          param: param,\n          body: body\n        };\n      }\n  \n  Finally\n    = FinallyToken __ block:Block { return block; }\n  \n  DebuggerStatement\n    = DebuggerToken EOS { return { type: "DebuggerStatement" }; }\n  \n  // ----- A.5 Functions and Programs -----\n  \n  FunctionDeclaration\n    = FunctionToken __ id:Identifier __\n      "(" __ params:(FormalParameterList __)? ")" __\n      "{" __ body:FunctionBody __ "}"\n      {\n        return {\n          type: "FunctionDeclaration",\n          id: id,\n          params: optionalList(extractOptional(params, 0)),\n          body: body\n        };\n      }\n  \n  FunctionExpression\n    = FunctionToken __ id:(Identifier __)?\n      "(" __ params:(FormalParameterList __)? ")" __\n      "{" __ body:FunctionBody __ "}"\n      {\n        return {\n          type: "FunctionExpression",\n          id: extractOptional(id, 0),\n          params: optionalList(extractOptional(params, 0)),\n          body: body\n        };\n      }\n  \n  FormalParameterList\n    = head:Identifier tail:(__ "," __ Identifier)* {\n        return buildList(head, tail, 3);\n      }\n  \n  FunctionBody\n    = body:SourceElements? {\n        return {\n          type: "BlockStatement",\n          body: optionalList(body)\n        };\n      }\n  \n  Program\n    = body:SourceElements? {\n        return {\n          type: "Program",\n          body: optionalList(body)\n        };\n      }\n  \n  SourceElements\n    = head:SourceElement tail:(__ SourceElement)* {\n        return buildList(head, tail, 1);\n      }\n  \n  SourceElement\n    = Statement\n    / FunctionDeclaration\n  \n  // ----- A.6 Universal Resource Identifier Character Classes -----\n  \n  // Irrelevant.\n  \n  // ----- A.7 Regular Expressions -----\n  \n  // Irrelevant.\n  \n  // ----- A.8 JSON -----\n  \n  // Irrelevant.\n\n  ').parse(e),o=new A,s=new i;s.print=function(u){t+=u+"\n",n.value=t,n.scrollTop=n.scrollHeight},o.evalute(s,a)}(e.value)}document.addEventListener("DOMContentLoaded",(function(){document.querySelector("#run").addEventListener("click",l)}))})()})();